var popOverOpen = false;
var CurrentHoverRowId = 0;
var SubTaskPopupOpen = true;
//for popups
var options = {
    "backdrop": "static",
    keyboard: true
}
var chkvalesArr = [];
var selectAll = false;


function downloadRemarkFile(filename, filepath) {
    $.post('/Tasks/DownloadRemarkFile', { filename: filename, filepath: filepath }, function (data) {
        if (data == "") {
            window.location.href = "/Home/Logout";
        }
        else if (data == "err") {
            $('#TaskClosedContent').html('');
            $('#TaskClose').modal(options);
            $('#TaskClosedContent').html("<h3 class='text-center'>File not found</h3>");
            $('#TaskClose').modal("show");
            setTimeout(function () { $('#TaskClose').modal("hide"); }, 1000);
        }
        else {
            window.location.href = "/Tasks/DownloadFile?FullFilepath=" + data.FullFilepath + "&contentType=" + data.contentType + "&filename=" + data.filename
        }

    })
}

//create all the data div and controls
function loadData(data) {
    var tblEmployee = $("#example ");
    $("#example  div").remove();
    tblEmployee.height(0);
    $("#selectall").prop('checked', false);
    var a = data.draw;
    if ($("#Next").hasClass("disabledbutton") == true) {
        $("#Next").removeClass("disabledbutton");
    }
    if ($("#Prev").hasClass("disabledbutton") == true) {
        $("#Prev").removeClass("disabledbutton");
    }
    var d = sessionStorage.getItem("PageSize");
    if (d == null || d == 0 || d == "undefined") { d = 50; sessionStorage.setItem("PageSize", d); };
    var b;
    if (a == 1) { b = d; sessionStorage.setItem("start", 0); } else { b = parseInt(a) + parseInt(d); a = parseInt(a) + 1; sessionStorage.setItem("start", a); }


    sessionStorage.setItem("Total", data.recordsTotal);
    var c = data.recordsTotal;
    if (c == 0) { a = c; b = c; $("#Next").addClass("disabledbutton"); $("#Prev").addClass("disabledbutton"); }
    else if (c < b && a == 1) { b = c; $("#Next").addClass("disabledbutton"); $("#Prev").addClass("disabledbutton"); }
    else if (c < b && a > 1) { b = c; $("#Next").addClass("disabledbutton"); }
    else if (a == 1) { $("#Prev").addClass("disabledbutton"); }
    else if (parseInt(a) + parseInt(d) > c) { $("#Next").addClass("disabledbutton"); $("#Prev").removeClass("disabledbutton"); }
    $("#info").text(a + "-" + b + " of " + c);
    var m = a - 1;

    //Added by aslam
    $.each(data.data, function (index, item) {
        m = m + 1;
        var Parentdiv = $("<div id='MainDiv-" + item.CRMTasks_Key + "'class='col-md-12  clickable  parentdiv' style='display: inline-flex;' width:100%;  style='overflow-x:scroll;  ' onmouseover='hoverId(this)' onmouseout='hoverNot(this)'></div>");
        if (item.hasSubtasks == "Y") {
            Parentdiv = $("<div id='MainDiv-" + item.CRMTasks_Key + "' class='col-md-12  clickable  parentdiv  viewSubTaskbycaret' style='display: inline-flex;  ' ><input type='checkbox' onclick='chkCheckUncheck(this)' class='checkboxall' id='chk-" + item.CRMTasks_Key + "' value='" + item.CRMTasks_Key + "' style='margin-top: 25px; margin-right:10px;' /> <a onclick='GetSubTasksData(" + item.CRMTasks_Key + "," + item.P_CRMTasks + ",this)' data-target='." + item.CRMTasks_Key + "' class ='pull-left-container' style='cursor: pointer; padding:7px;'> <i class='fa fa-angle-right' style='font-size:25px; cursor: pointer; margin-top: 10px;padding-bottom: 20px;font-weight: 600; z-index:1; padding-right:0px; padding-left:0px;transition:transform .5s ease;'></i></a> </div>");
        }
        else {
            Parentdiv = $("<div id='MainDiv-" + item.CRMTasks_Key + "' class='col-md-12  clickable  parentdiv  viewSubTaskbycaret' style='display: inline-flex; ' > <input type='checkbox' onclick='chkCheckUncheck(this)' class='checkboxall' id='chk-" + item.CRMTasks_Key + "' value='" + item.CRMTasks_Key + "' style='margin-top: 25px; margin-right:10px;' /> <a  class ='pull-left-container' style='cursor: pointer; padding:5px;'> <i class='fa fa-angle-down' style='color:transparent; font-size:25px;  margin-top: 10px;padding-bottom: 20px; padding-right:0px;  padding-left:0px; font-weight: 600; z-index:1;'></i></a> </div>");
        }
        //Parentdiv = $("<div id='MainDiv-" + item.CRMTasks_Key + "' class='col-md-12  clickable  parentdiv  viewSubTaskbycaret' style='display: inline-flex;  ' ><input type='checkbox' class='checkboxall'' value='checkbox1' style='margin-top: 25px; margin-right:10px;' /> <a onclick='GetSubTasksData(" + item.CRMTasks_Key + "," + item.P_CRMTasks + ",this)' data-target='." + item.CRMTasks_Key + "' class ='pull-left-container' style='cursor: pointer; padding:7px;'> <i class='fa fa-angle-right' style='font-size:25px; cursor: pointer; margin-top: 10px;padding-bottom: 20px;font-weight: 600; z-index:1; padding-right:0px; padding-left:0px;'></i></a> </div>");
        tblEmployee.append(Parentdiv);
        var div = $("<div id='tr-" + item.CRMTasks_Key + "' class='tr u col-md-12  main' style='padding-left:8px; height: 90px;   padding-bottom:10px; width:100%; display:inline-flex;    font-size:11px; font-family: open sans,sans-serif;    ' ></div>");
        div.html(("<div class='Sno td' style='width:8%; text-align:left;  padding:0 8px 0 8px; ' >  " + m + "</div>")
            + " " + ("<div class='Taskid td' style='width:7%; text-align:left; padding:0 8px 0 8px;' >" + item.P_CRMTasks + "</div>")
            + " " + ("<div class='Tasktitle td' style='width:12%; text-align:left; padding:0 8px 0 8px;'>" + item.TaskTitle + "</div>")
            + " " + ("<div class='Taskdescription td ' style='width:23%; text-align:left;padding:0 8px 0 8px; '>" + item.TaskDescription + "</div>")
            + " " + ("<div class='Taskstatus td' style=' width:11%; text-align:center; padding:0 8px 0 8px;' data-taskstatus='" + item.Taskstatus + "'>" + item.TextTaskStatus + "</div>")
            + " " + ("<div class='Startdate td h' style='width:11%; text-align:left;  padding:0 8px 0 8px; '>" + item.FrmtStartDate + "</div>")
            + " " + ("<div class='Duedate td' style='width:11%;   text-align: left; padding:0 8px 0 8px; '>" + item.FrmtDueDate + "</div>")
            + " " + ("<div class='TaskAssignedto td' style='width:11%;    text-align:center; padding:0 8px 0 8px; ' data-assignedto='" + item.Assignedto + "'>" + item.TextAssignedto + "</div>")
            + " " + ("<div class='Taskcreateby td' style='width:12%;   text-align:center; padding:0 8px 0 8px; '>" + item.TextCreatedBy + "</div>"));
        Parentdiv.append(div);

        togglediv = $("<div class='SubtaskBox' id='toggleDiv-" + item.CRMTasks_Key + "' class='col-md-12' style='display:none'><div id='loading' style='padding: 10px; '><div colspan='5'><div id='loadingmessage' class='loader overlay col - md - offset - 6' style='margin: 10px auto;'></div><p id='Msg'></p></div></div></div>");
        tblEmployee.append(togglediv);

        if (selectAll) {
            $("#selectall").prop('checked', true);
            $('.checkboxall').each(function () {
                $(".checkboxall").prop('checked', true);
            })
        }
        else {
            for (var i = 0; i < chkvalesArr.length; i++) {
                $("#chk-" + chkvalesArr[i]).prop('checked', true);
            }
        }

    });

    if (data.recordsTotal == 0) {
        $('#loading').show();
        $('#loadingmessage').hide();
        $("#Msg").show();
        $("#Msg").text("No record found");
        $('#loading').addClass('clickable');
        $("#example").height(0);
    } else {
        $('#loading').hide();
        $('#loadingmessage').hide();
        $('#Msg').hide();
        Deviceheight();
        DetailPaneHeight();
    }
    //Deviceheight();
    //DetailPaneHeight();

    //onclick select all checkbox
    $("#selectall").click(function () {
        if (this.checked) {
            $('.checkboxall').each(function () {
                $(".checkboxall").prop('checked', true);
                var index = chkvalesArr.indexOf($(this).val());
                if (index == -1) {
                    chkvalesArr.push($(this).val());
                }
            })
            $("#subDiv #subDivLable").text("Select all rows");
            $("#subDiv").show();
        }
        else {
            $('.checkboxall').each(function () {
                $(".checkboxall").prop('checked', false);
                var index = chkvalesArr.indexOf($(this).val());
                if (index > -1) {
                    chkvalesArr.splice(index, 1);
                }
            })
            selectAll = false;
            $("#subDiv").hide();
        }
    });


    $(document).ready(function () {
        $('#right1').on('click', '#hideDetailPane', function () {

            var isSomethingTrue = true;
            if (isSomethingTrue) {

                $("#right1").hide();
                $(".left").show();
                $(".Taskstatus").addClass(".mov");

            }

        });

        $('.right').on('click', '#RightShift', function () {

            var isSomethingTrue = true;
            if (isSomethingTrue && ($(window).width() >= 600)) {
                Deviceheight();
                $(".main").css("display", "inline-flex");
                $("#dropdown").removeClass("setStyle");
                $(".right").hide();
                $(".left").show();
                $(".left").removeClass("move");
                $(".h").show();
                $("div").removeClass("style");
                $("div").css("box-shadow", "none");
                $(".right").css('display', 'none');

            }
            else if (isSomethingTrue && ($(window).width() <= 600)) {
                $(".right").hide();
                $(".left").show();
                $(".left").removeClass("move");
                $(".Taskstatus").addClass(".mov");
                Deviceheight();
                DetailPaneHeight();
            }
        });
    });

    $(document).ready(function () {
        $('.tabs-navWeb a').on('click', function (event) {
            event.preventDefault();

            $('.tab-activeWeb').removeClass('tab-activeWeb');
            $(this).parent().addClass('tab-activeWeb');
            $('.tabs-stageWeb .div').hide();
            $('.tabs-stageWeb').find($(this).attr('href')).show();
        });

        $('.tabs-navWeb a:first').trigger('click'); // Default

        $('.tabs-nav a').on('click', function (event) {
            event.preventDefault();

            $('.tab-active').removeClass('tab-active');
            $(this).parent().addClass('tab-active');
            $('.tabs-stage .div').hide();
            $('.tabs-stage').find($(this).attr('href')).show();
        });

        $('.tabs-nav a:first').trigger('click'); // Default
        $('.ShareBox button').click(function () {
            $(this).prev("input").focus();
            $(this).prev("input").select();

            document.execCommand('copy');

        });

    });

}

$(document).ready(function () {
    $("nav").find(".newTitle").remove();
    var s = "<p class='newTitle' >Pending Tasks</p>";
    $("nav").find(".titleName").append(s);




    $('[data-toggle="tooltip"]').tooltip({ delay: { "show": 500, "hide": 100 } });
    $("#dropdown").removeClass("setStyle");
    $('#example').on('click', '.u', function () {
        $(".right").hide();
        var isSomethingTrue = true;
        $("div").css("box-shadow", "none");
        if (isSomethingTrue && ($(window).width() >= 600)) {
            $(this).parent("div").css("box-shadow", "0px 1px 4px 0px #33333359");
            $(".Taskdescription").css("margin-right", "15px");
            $("#dropdown").addClass("setStyle");
            $(".right").show();
            $(".left").addClass("move");
            $(".Taskstatus").addClass(".mov");
            $(".h").hide();
            Deviceheight();
            var $row = $(this).closest("div");
            SetMainTasktDetailPane($row, ".right");
        }
    });

    $('#example').on('click', '.sub', function () {
        $(".right").hide();
        $("div").removeClass("style");
        var isSomethingTrue = true;
        if (isSomethingTrue && ($(window).width() >= 600)) {
            $("#dropdown").addClass("setStyle");
            $(this).addClass("style");
            $(".right").show();
            $(".left").addClass("move");
            $(".Taskstatus").addClass(".mov");
            $(".h").hide();
            var $row = $(this).closest("div");
            SetSubTaskDetailPane($row, ".right")
        }
    });


    //Mobile detailpane onclick function
    $('#example').on('click', '.u', function () {
        var isSomethingTrue = true;
        if (isSomethingTrue && ($(window).width() <= 600)) {
            $("#dropdown").addClass("setStyle");
            $(".right").show();
            $(".right").addClass("mobileDetailPane");
            $(".left").hide();
            Deviceheight();
            var $row = $(this).closest("div");
            SetMainTasktDetailPane($row, ".right");
        }
    });

    $(".right").hide();
    $('#example').on('click', '.sub', function () {
        var isSomethingTrue = true;
        if (isSomethingTrue && ($(window).width() <= 600)) {
            $("#dropdown").addClass("setStyle");
            $(".right").show();
            $(".right").addClass("mobileDetailPane");
            $(".left").hide();
            var $row = $(this).closest("div");
            SetSubTaskDetailPane($row, ".right")
        }
    });
});

//Set table height according to screen
function Deviceheight() {
    var Header = $("header").outerHeight(true);
    var Container = 0;
    var icondiv = $(".calHeightIcon").outerHeight(true);
    var TableDive = $(".calHeightTaskBar").outerHeight(true);
    var Footer = $(".main-footer").outerHeight(true);
    var windowHeight = $(window).outerHeight(true);
    var SumOfElementHeight = Header + Container + TableDive + icondiv + Footer;
    var MainHeight = windowHeight - SumOfElementHeight - 15; //- 40;
    $("#example").height(MainHeight);
}

//added by Rasika for purpose of responsiveness while switching from desktop view to mobile view
$(document).ready(function () {
    function resizewidth() {
        if ($(window).width() >= 600) {
            $(".detailpaneIconrow").find("#RightShift").removeClass("fa-arrow-left").addClass("fa-arrow-right");
            if ($(".right").css('display') != 'none') {
                $(".left").addClass("move");
                $(".left").show();
                $(".right").show();
                $(".right").removeClass("mobileDetailPane");
            }
            else {
                $(".left").show();
                $(".right").hide();
            }
        }

        if ($(window).width() <= 600) {
            var i = $(".detailpaneIconrow").find("#RightShift").removeClass("fa-arrow-right").addClass("fa-arrow-left");
            if ($(".right").css('display') != 'none') {
                $(".left").hide();
                $(".right").addClass("mobileDetailPane");
            }
            else {
                $(".left").show();
                $(".right").hide();
                $(".right").removeClass("mobileDetailPane");
            }
        }
    }

    $(window).resize(function () {
        resizewidth();
        Deviceheight();
        DetailPaneHeight();
    });
});
// End Of Function

//Set  destop detail pane height according to screen 
function DetailPaneHeight() {
    var Header = $("header").outerHeight(true);
    var Footer = $(".main-footer").outerHeight(true);
    var windowHeight = $(window).outerHeight(true);
    var SumOfElementHeight = Header + Footer;
    var MainHeight = windowHeight - SumOfElementHeight;//- 20;
    $(".right").height(MainHeight);

}

//Show controls to edit task
function ShowEditTask(destination) {
    //Hide
    $(destination + " #editIcon").hide();
    $(destination + " #addSubTask").hide();
    $(destination + " #tasktitle").hide();
    $(destination + " #taskdescription").hide();
    $(destination + " #duedate").hide();
    $(destination + " #taskstatus").hide();
    $(destination + " #assignedto").hide();

    //Show
    $(destination + " #SaveTask").show();
    $(destination + " #txttasktitle").show();
    $(destination + " #txttaskdescription").show();
    $(destination + " #CancleEdit").show();
    $(destination + " #dtduedate").show();
    $(destination + " #ddlAssignedto").show();
    $(destination + " #ddlTaskStatus").show();

}

//Close Controls to edit task
function CancleEditTask(destination) {
    //Show
    $(destination + " #editIcon").show();
    $(destination + " #taskdescription").show();
    $(destination + " #duedate").show();
    $(destination + " #addSubTask").show();
    $(destination + " #tasktitle").show();
    $(destination + " #taskstatus").show();
    $(destination + " #assignedto").show();

    //Hide
    $(destination + " #SaveTask").hide();
    $(destination + " #txttaskdescription").hide();
    $(destination + " #txttasktitle").hide();
    $(destination + " #CancleEdit").hide();
    $(destination + " #dtduedate").hide();
    $(destination + " #ddlAssignedto").hide();
    $(destination + " #ddlTaskStatus").hide();
}


//Load Task Remarks
function LoadRemarks(TaskPid, destination) {
    $(destination + " #remarkTab #boxLoading #boxLoadingMessage").show();
    $(destination + " #remarkTab #AllRemarks").hide();
    $.ajax({
        type: "POST",
        url: "/Tasks/AddTasksRemarkData",
        data: { taskId: TaskPid },
        success: function (data) {
            if (data == "") {
                window.location.href = "/Home/LogOut";
                return true;
            }
            var a = 1;
            var finalDestination = $(destination + " #remarkTab #AllRemarks")
            finalDestination.empty();
            $.each(data.data, function (index, item) {
                var m = (a) + index;
                //Load Data
                var html = '<div class="RemarkHistoryItem col-sm-12" style="margin-bottom:12px; border-radius:5px; background-color:#f3f8fa; padding:10px;" id="' + item.CRMCommunication_key + '">'
                    + '<div class="line1 " style="display:flex; overflow: hidden;">  <span class="">' + m + '</span>   <div class=""><i class="fa fa-comment" style="padding-right:8px;"></i></div>  <div style="">' + item.Commtext + '</div></div>'
                    + '<div class="line2"><span class="Remarkuser"><i class="fa fa-user" aria-hidden="true"></i>' + item.TextLogincode + '</span><span class="Remarkdate" style="float:right;"><i class="fa fa-calendar"></i>' + item.FrmtCreationDate + '</span></div>';
                if (item.FileName != "") {
                    //html = html + '<div class="line3"><span class="upload">Uploaded File :</span><a href="' + item.LinkURL + '" class="filenam">' + item.FileName + '</a></div></div>';
                    //html = html + '<div class="line3"><span class="upload">Uploaded File :</span><a href="/Tasks/DownloadRemarkFile?filename=' + $.trim(item.FileName) + '&filepath=' + item.LinkURL + '" class="filenam">' + item.FileName + '</a></div></div>';
                    html = html + '<div class="line3"><span class="upload">Uploaded File :</span><a style="cursor:pointer" onClick="downloadRemarkFile(\'' + $.trim(item.FileName) + '\',\'' + item.LinkURL + '\')"  class="filenam">' + item.FileName + '</a></div></div>';
                }
                var remarkDiv = $(html);

                finalDestination.append(remarkDiv);
                $(destination + " #remarkTab #boxLoading #boxLoadingMessage").hide();
                finalDestination.show();
            });
            if (data.recordsTotal == 0) {
                var NothingDiv = $('<div class="RemarkHistoryItem" style="padding-bottom:8px;"><div class="line1"><span>No Remarks here</span> </div></div>');
                finalDestination.append(NothingDiv);
                $(destination + " #remarkTab #boxLoading #boxLoadingMessage").hide();
                finalDestination.show();
            }
        },
        error: function () {
            var NothingDiv = $('<div class="RemarkHistoryItem" style="padding-bottom:8px;"><div class="line1"><span>No Remarks here</span> </div></div>');
            $(destination + " #remarkTab #AllRemarks").append(NothingDiv);
            $(destination + " #remarkTab #boxLoading #boxLoadingMessage").hide();
            $(destination + " #remarkTab #AllRemarks").show();
        }
    });
}

//Load Task Collaborators
function ShowCollaboratorsNew(destination) {
    $(destination + " .SectionCollaborators #boxLoading #boxLoadingMessage").show();
    $(destination + " .SectionCollaborators #AllCollab").hide();
    var p_crmtasks = $(destination + " #taskid").text();
    $.ajax({
        type: "POST",
        url: "/Tasks/AddCollaboratorsData",
        data: { taskId: p_crmtasks },
        success: function (data) {
            if (data == "") {
                window.location.href = "/Home/LogOut";
                return true;
            }
            $(destination + " .SectionCollaborators .boxx #AllCollab").empty();
            $.each(data.data, function (index, item) {
                var html = ' <div class="CollaboratorsBoxx" id="' + item.CRMCollaborator_key + '"><i class="fa fa-user" aria-hidden="true" style="display: inline-flex; font-size: 13px; margin-left:10px;"></i>'
                    + ' <span id="collaboratorName" style="display: inline-flex; font-size: 13px; font-weight:300; color:black;">' + item.TxtCollaborator + '</span>'
                    + ' <span class="closebn" id="' + item.CRMCollaborator_key + '" onclick="deleteCollaboratorNew(this.id,\'' + destination + '\')" style="float: right;  cursor: pointer; height: 20px; width: 20px; text-align: center; padding: 0px;  margin-top: 10px;">&times;</span></div>';

                var collaboratorDiv = $(html);
                $(destination + " .SectionCollaborators .boxx #AllCollab").append(collaboratorDiv);
                $(destination + " .SectionCollaborators #boxLoading #boxLoadingMessage").hide();
                $(destination + " .SectionCollaborators #AllCollab").show();
            });

            if (data.recordsTotal == 0) {
                var NotingCollabDiv = $('<div class="CollaboratorsBoxx"><span id="collaboratorName" style="display: inline-flex; font-size: 13px; font-weight:300; color:black;">No Collaborators here</span></div>');
                $(destination + " .SectionCollaborators .boxx #AllCollab").append(NotingCollabDiv);
                $(destination + " .SectionCollaborators #boxLoading #boxLoadingMessage").hide();
                $(destination + " .SectionCollaborators #AllCollab").show();
            }
        },
        error: function () {
            var NotingCollabDiv = $('<div class="CollaboratorsBoxx"><span id="collaboratorName" style="display: inline-flex; font-size: 13px; font-weight:300; color:black;">No Collaborators here</span></div>');
            $(destination + " .SectionCollaborators .boxx #AllCollab").append(NotingCollabDiv);
            $(destination + " .SectionCollaborators #boxLoading #boxLoadingMessage").hide();
            $(destination + " .SectionCollaborators #AllCollab").show();
        }
    });

}

//Delete Task Collaborators
function deleteCollaboratorNew(id, destination) {
    $.ajax({
        type: "GET",
        url: "/Tasks/DeleteCollaborator",
        contentType: "application/json; charset=utf-8",
        datatype: "json",
        data: { id: id },
        success: function (data) {
            if (data == "") {
                window.location.href = "/Home/LogOut";
                return true;
            }
            ShowMsg("Collaborator deleted Successfully");
            ShowCollaboratorsNew(destination);
        },
        error: function () {
            alert("error")
        }
    });
}

//Add new Task Collaborator
function SubmitCollaboratorsNew(destination) {
    var TaskId = $(destination + " #taskid").text();
    var selectedCollaborator = $(destination + " #ddlCollab").val();
    var Taskkey = $(destination + "   #taskkey").text();
    if (selectedCollaborator != 0) {
        $.ajax({
            type: "POST",
            url: "/Tasks/AddTaskCollaborators",
            data: { Taskid: TaskId, Taskkey: Taskkey, collaboratorId: selectedCollaborator },
            success: function (data) {
                if (data == "Already Collborate") {
                    ShowMsg("Already a collaborator");
                    return true;
                }
                else if (data == "true") {
                ShowMsg("Collaborator has been added Successfully.");
                closeAddCollab(destination);
                ShowCollaboratorsNew(destination);
                }
                else {
                    ShowMsg("An error occured while storing your Information .Please try again later.");
                }
            },
            error: function () {
                ShowMsg("An error occured while storing your Information .Please try again later.");
            }
        });
    }

}

//Show Controls to Add new Task Collaborator
function AddCollaboratorsNew(destination) {
    $(destination + " .SectionCollaborators #AddCollab").hide();
    $(destination + " .SectionCollaborators #ddlCollab").show();
    $(destination + " .SectionCollaborators #closeAddCollab").show();
}

//Close Controls of Add new Task Collaborator
function closeAddCollab(destination) {
    $(destination + " .SectionCollaborators #AddCollab").show();
    $(destination + " .SectionCollaborators #ddlCollab").val(0);
    $(destination + " .SectionCollaborators #ddlCollab").hide();
    $(destination + " .SectionCollaborators #closeAddCollab").hide();
}

//Load Task Tags
function ShowTagsNew(destination) {
    $(destination + " .task-classification #boxLoading #boxLoadingMessage").show();
    $(destination + " .task-classification #tag-container").hide();
    var p_crmtasks = $("#taskid").text();
    $.ajax({
        type: "POST",
        url: "/Tasks/ShowTagsData",
        data: { TaskId: p_crmtasks },
        success: function (data) {
            if (data == "") {
                window.location.href = "/Home/LogOut";
                return true;
            }
            $(destination + " .task-classification .boxx #tag-container").empty();
            $.each(data.data, function (index, item) {
                var html = ' <div class="TagsBoxx" id="' + item.tags_key + '">'
                        + ' <span id="TagName" style="padding-left:10px; display: inline-flex; font-size: 13px; font-weight:300; color:black;">' + item.txttagname + '</span>'
                        + ' <span class="closebn" id="' + item.p_tags + '" onclick="deleteTagsNew(this.id, \'' + destination + '\')" style="float: right; display: inline-flex; cursor: pointer; ">&times;</span></div>';

                var TagDiv = $(html);
                $(destination + " .task-classification .boxx #tag-container").append(TagDiv);
                $(destination + " .task-classification #boxLoading #boxLoadingMessage").hide();
                $(destination + " .task-classification #tag-container").show();
            });

            if (data.recordsTotal == 0) {
                var NotingCollabDiv = $('<div class="TagsBoxx"><span id="TagName" style="padding-left:10px; display: inline-flex; font-size: 13px; font-weight:300; color:black;">No Tags here</span></div>');
                $(destination + " .task-classification .boxx #tag-container").append(NotingCollabDiv);
                $(destination + " .task-classification #boxLoading #boxLoadingMessage").hide();
                $(destination + " .task-classification #tag-container").show();
            }
        },
        error: function () {
            var NotingCollabDiv = $('<div class="TagsBoxx"><span id="TagName" style="padding-left:10px; display: inline-flex; font-size: 13px; font-weight:300; color:black;">No Tags here</span></div>');
            $(destination + " .task-classification .boxx #tag-container").append(NotingCollabDiv);
            $(destination + " .task-classification #boxLoading #boxLoadingMessage").hide();
            $(destination + " .task-classification #tag-container").show();
        }
    });

}

//Delete Task Collaborators
function deleteTagsNew(p_tags, destination) {
    $.ajax({
        type: "GET",
        url: "/Tasks/DeleteTag",
        contentType: "application/json; charset=utf-8",
        datatype: "json",
        data: { p_tags: p_tags },
        success: function (data) {
            if (data == "") {
                window.location.href = "/Home/LogOut";
                return true;
            }
            ShowMsg("Tag deleted Successfully");
            ShowTagsNew(destination);
        },
        error: function () {
            alert("error")
        }
    });
}

//Add new Task Tag
function SubmitTagsNew(destination) {
    var TaskId = $(destination + " #taskid").text();
    var selectedTag = $(destination + " #ddlTags").val();
    if (selectedTag != 0) {
        $.ajax({
            type: "POST",
            url: "/Tasks/AjaxAddTaskTags",
            data: { Taskid: TaskId, p_infotable: selectedTag },
            success: function (data) {
                if (data == "Already Added") {
                    ShowMsg("This tag is already added");
                    return true;
                }
                else if (data == "true") {
                    ShowMsg("Tag has been added Successfully.");
                    closeTag(destination);
                    ShowTagsNew(destination);
                }
                else {
                    ShowMsg("An error occured while storing your Information .Please try again later.");
                }
            },
            error: function () {
                ShowMsg("An error occured while storing your Information .Please try again later.");
            }
        });
    }

}

//Show Controls to Add new Task Tag
function AddTagsNew(destination) {
    $(destination + " .task-classification #PlusTag").hide();
    $(destination + " .task-classification #ddlTags").show();
    $(destination + " .task-classification #closeTag").show();
}

//Close Controls of Add new Task Tag
function closeTag(destination) {
    $(destination + " .task-classification #PlusTag").show();
    $(destination + " .task-classification #ddlTags").val(0);
    $(destination + " .task-classification #ddlTags").hide();
    $(destination + " .task-classification #closeTag").hide();
}

//Submit Task Edit
function SubmitEditTask(destination) {
    //NextActionDate: $("#dtmNextActionDate").val()
    var formData = {
        P_CRMTasks: $(destination + " #taskid").text(),
        TaskTitle: $(destination + " #txttasktitle").val(),
        TaskDescription: $(destination + " #txttaskdescription").val(),
        duedate: $(destination + " #dtduedate").val(),
        Taskstatus: $(destination + " #ddlTaskStatus").val(),
        Assignedto: $(destination + " #ddlAssignedto").val()
    };
    $.ajax({
        type: "POST",
        url: "/Tasks/EditTask",
        data: formData,
        success: function (data) {
            if (data == "") {
                window.location.href = "/Home/LogOut";
                return true;
            }
            else if (data == "err-close") {
                ShowMsg("To close this task first close all subtasks of this task");
            }
            else if (data == "success") {
                ShowMsg("Edited Successfully");
                window.location.href = '/Tasks/ManagePendingTasks';
            }
            else if (data == "err-try") {
                ShowMsg("An error occured while storing your Information .Please try again later");
            }


        },
        error: function () {
            alert("Error in loading data")
        }
    });

    return false;
}

//Show Messages
function ShowMsg(msg) {
    $(".RemarkMessage #Content").text(msg);
    $('.RemarkMessage').show();
}

//Submit Task Remark
function SubmitTaskRemarkNew(destination) {
    var formdata = new FormData();
    var remark = $(destination + " #frmRemarkRight #txtRemark").val();
    formdata.append('remark', remark);
    var taskId = $(destination + " #taskid").text();
    formdata.append('taskId', taskId);
    var file = $(destination + ' #frmRemarkRight #remarkfile')[0].files[0];
    formdata.append('file1', file)
    console.log(file);
    if ($.trim(remark) != "" || typeof file !== "undefined") {
        //Creating an XMLHttpRequest and sending
        var xhr = new XMLHttpRequest();
        xhr.open('POST', '/Tasks/AddTasksRemark');
        xhr.send(formdata);
        xhr.onreadystatechange = function () {
            if (xhr.readyState == 4 && xhr.status == 200) {
                ShowMsg("Remark added Successfully. . !");
                var taskpid = $(destination + " #taskid").text();
                LoadRemarks(taskpid, destination);
            }
        }
        $(destination + " #frmRemarkRight #txtRemark").val("");
        $(destination + ' #frmRemarkRight #remarkfile').val("");
    }
    else {
        ShowMsg("Please fill at lease one");
    }

    return false;
}

//Set Main-Task Values to the DetailPane
function SetMainTasktDetailPane($row, destination) {
    var $id = $row[0].id;
    var $taskKey = $.trim($id.substring($id.indexOf("-") + 1));
    var $taskid = $row.find(".Taskid").text();
    var $tasktitle = $row.find(".Tasktitle").text();
    var $taskdescription = $row.find(".Taskdescription").text();
    var $taskstatus = $row.find(".Taskstatus").text();
    var $startdate = $row.find(".Startdate").text();
    var $duedate = $row.find(".Duedate").text();

    var $ddltaskstatus = $row.find(".Taskstatus").attr("data-taskstatus");
    var $assignedto = $row.find(".TaskAssignedto").text();
    var $ddlassignedto = $row.find(".TaskAssignedto").attr("data-assignedto");

    $(destination + "   #taskid").text($taskid);
    $(destination + "   #taskkey").text($taskKey);
    $(destination + "   #tasktitle").text($tasktitle);
    $(destination + "   #txttasktitle").text($tasktitle);
    $(destination + "   #taskdescription").text($taskdescription);
    $(destination + "   #txttaskdescription").text($taskdescription);
    $(destination + "   #taskstatus").text($taskstatus);
    $(destination + "   #ddlTaskStatus").val($ddltaskstatus);
    $(destination + "   #assignedto").text($assignedto);
    $(destination + "   #ddlAssignedto").val($ddlassignedto);
    $(destination + "   #startdate").text($startdate);
    $(destination + "   #duedate").text($duedate);
    $(destination + "   #subtask").text('Main-Task');

    //if ($duedate!="") {
    //    var dateArr1 = $duedate.split(" ");
    //    var dateArr2 = dateArr1[0].split("/");
    //    var dtduedate = dateArr2[2] + '-' + dateArr2[1] + '-' + dateArr2[0];
    //    $(destination + " #dtduedate").val(dtduedate);
    //}
    //else {
    //    var crtDate = new Date();
    //    var month = (crtDate.getMonth() + 1)<10 ? '0' + (crtDate.getMonth() + 1) : (crtDate.getMonth() + 1) ;
    //    var day = crtDate.getDate() < 10 ? '0' + crtDate.getDate() : crtDate.getDate();
    //    var dtduedate =crtDate.getFullYear() + "-" + month + "-" + day ;
    //    $(destination + " #dtduedate").val(dtduedate);
    //}

    if ($duedate!="") {
        var dateArr1 = $duedate.split(" ");
        var dateArr2 = dateArr1[0].split("/");
        var dtduedate = dateArr2[2] + '-' + dateArr2[1] + '-' + dateArr2[0] + "T" + dateArr1[1];
        $(destination + " #dtduedate").val(dtduedate);
    }
    else {
        var crtDate = new Date();
        var month = (crtDate.getMonth() + 1)<10 ? '0' + (crtDate.getMonth() + 1) : (crtDate.getMonth() + 1) ;
        var day = crtDate.getDate() < 10 ? '0' + crtDate.getDate() : crtDate.getDate();
        var hour = crtDate.getHours().toString().padStart(2, "0");
        var minute = crtDate.getMinutes().toString().padStart(2, "0");
        var dtduedate =crtDate.getFullYear() + "-" + month + "-" + day +"T"+hour+":"+minute;
        $(destination + " #dtduedate").val(dtduedate);
    }
    

   
    $(destination + " .ShareBox input[type='text']").val("");
    $(destination + " .ShareBox").hide();

    $(".RemarkMessage #Content").text("");
    $('.RemarkMessage').hide();

    CancleEditTask(destination);
    LoadRemarks($taskid, destination);
    ShowCollaboratorsNew(destination);
    ShowTagsNew(destination);
}

//Set Sub-Task Values to the DetailPane
function SetSubTaskDetailPane($row, destination) {
    var $id = $row[0].id;
    var $taskKey = $.trim($id.substring($id.indexOf("-") + 1));
    var $taskid = $row.find(".SubTaskid").text();
    var $tasktitle = $row.find(".SubTasktitle").text();
    var $taskdescription = $row.find(".SubTaskdescription").text();
    var $taskstatus = $row.find(".SubTaskstatus").text();
    var $startdate = $row.find(".SubTaskStartdate").text();
    var $duedate = $row.find(".SubTaskDuedate").text();

    var $assignedto = $row.find(".TaskAssignedto").text();
    var $ddltaskstatus = $row.find(".SubTaskstatus").attr("data-taskstatus");
    var $ddlassignedto = $row.find(".TaskAssignedto").attr("data-assignedto");

    $(destination + "   #taskid").text($taskid);
    $(destination + "   #taskkey").text($taskKey);
    $(destination + "   #tasktitle").text($tasktitle);
    $(destination + "   #txttasktitle").text($tasktitle);
    $(destination + "   #taskdescription").text($taskdescription);
    $(destination + "   #txttaskdescription").text($taskdescription);
    $(destination + "   #taskstatus").text($taskstatus);
    $(destination + "   #ddlTaskStatus").val($ddltaskstatus);
    $(destination + "   #assignedto").text($assignedto);
    $(destination + "   #ddlAssignedto").val($ddlassignedto);
    $(destination + "   #startdate").text($startdate);
    $(destination + "   #duedate").text($duedate);
    $(destination + "   #subtask").text('Sub-Task');

    //var dateArr1 = $duedate.split(" ");
    //var dateArr2 = dateArr1[0].split("/");
    //var dtduedate = dateArr2[2] + '-' + dateArr2[1] + '-' + dateArr2[0];
    //$(destination + " #dtduedate").val(dtduedate);

    if ($duedate != "") {
    var dateArr1 = $duedate.split(" ");
    var dateArr2 = dateArr1[0].split("/");
        var dtduedate = dateArr2[2] + '-' + dateArr2[1] + '-' + dateArr2[0] + "T" + dateArr1[1];
    $(destination + " #dtduedate").val(dtduedate);
    }
    else {
        var crtDate = new Date();
        var month = (crtDate.getMonth() + 1) < 10 ? '0' + (crtDate.getMonth() + 1) : (crtDate.getMonth() + 1);
        var day = crtDate.getDate() < 10 ? '0' + crtDate.getDate() : crtDate.getDate();
        var hour = crtDate.getHours().toString().padStart(2, "0");
        var minute = crtDate.getMinutes().toString().padStart(2, "0");
        var dtduedate = crtDate.getFullYear() + "-" + month + "-" + day + "T" + hour + ":" + minute;
        $(destination + " #dtduedate").val(dtduedate);
    }

    $(".RemarkMessage #Content").text("");
    $('.RemarkMessage').hide();

    CancleEditTask(destination);
    LoadRemarks($taskid, destination );
    $(destination + " .ShareBox input[type='text']").val("");
    $(destination + " .ShareBox").hide();

    ShowCollaboratorsNew(destination);
}

//Create Shareable link for Task
function CreateLink(destination) {
    var taskid = $(destination + " #taskid").text();
    $.post('/Tasks/CreatePublicUrlForTask', { P_CrmTasks: taskid }, function (data) {
        if (data == "logout") {
            window.location.href = "/Home/LogOut";
        }
        else {
            $(destination + " .ShareBox input[type='text']").val(data);
            $(destination + " .ShareBox").show();
        }

    })
}

function AddSubTask(destination) {
    var TaskPid = $(destination + " #taskid").text();
    $.ajax({
        type: "GET",
        url: '/Tasks/CRMSubTasksForm?PCRMTasks=' + TaskPid,
        contentType: "application/json; charset=utf-8",
        datatype: "json",
        data: { exitmode: "ManagePendingTasks", PCRMTasks: TaskPid },
        success: function (data) {
            $('#CreateCRMSubTasks').html(data);
            $('#CreateSubTasks').modal(options);
            $('#CreateSubTasks').modal();
            $(".PanelForm").css({ "width": "252px" });
            $(".Task").css({ "margin-top": "0px", "margin-bottom": "10px" });
            $(".hr").css("margin-bottom", "20px")
            $(".hr").append('<hr />')
            $(".mainpanel").css({ "margin-left": "20px", "padding-left": "5px", "width": "270px" });
            $(".mainpanel").css('margin-top', '20px');
            $(".labeltext").css({ "margin-bottom": "10px" });
            //$(".forminput").css({ "margin-bottom": "15px" });
            $(".mainbutton").css({ "margin": "20px 0px 20px 15px" });

        },

    })
}

//Show Confirmation PopUp modal before close a task
function ShowCloseTaskModal(destination) {
    $("#TaskCloseModal").modal(options);
    $("#TaskCloseModal").modal("show");
    $("#TaskCloseModal #destinationName").val(destination);

}

//Close a task
function CloseTask() {
    var destination = $("#TaskCloseModal #destinationName").val();
    var TaskKey = $(destination + " #taskkey").text();
    $("#TaskCloseModal").modal("hide");
    $.post('/Tasks/TaskClose', { id: TaskKey }, function (data) {
        if (data == "") {
            window.location.href = "/Home/LogOut";
            return true;
        }
        else if (data == "HasSubTask") {
            ShowMsg("This task contains Subtasks. Please close them first");
            return false;
        }
        else if (data == "true") {
            ShowMsg("Task Closed Successfully");
            window.location.href = '/Tasks/ManagePendingTasks';
            return false;
        }
    });
}

//Show Confirmation PopUp modal before close a task
function ShowMultiTaskCloseModal() {
    var TaskKeys = "";
    //$(".checkboxall:checked").each(function () {
    //    var val = $(this).val();
    //    TaskKeys += TaskKeys == "" ? val : "," + val;
    //});
    for (var i = 0; i < chkvalesArr.length; i++) {
        var val = chkvalesArr[i];
        TaskKeys += TaskKeys == "" ? val : "," + val;
    }
    if ($.trim(TaskKeys) !== "") {
        $("#MultiTaskCloseModal").modal(options);
        $("#MultiTaskCloseModal").modal("show");
        $("#MultiTaskCloseModal #taskKeys").val(TaskKeys);
    }
    else {
        $('#TaskClosedContent').html('');
        $('#TaskClose').modal(options);
        $('#TaskClosedContent').html("<p class='text-center' style='font-size: 18px;margin-bottom: 30px;'>Please select minimum 1 Task.</p>");
        $('#TaskClose').modal("show");
        setTimeout(function () { $('#TaskClose').modal("hide"); }, 2000);
    }

    
}
//Close Multiple task
function CloseMultipleTask() {
    var taskKeys = $("#MultiTaskCloseModal #taskKeys").val();
    $("#MultiTaskCloseModal").modal("hide");
    $.post('/Tasks/MultipleTaskClose', { TaskKeys: taskKeys }, function (data) {
        if (data == "") {
            window.location.href = "/Home/LogOut";
            return true;
        }
        $('#TaskClosedContent').html('');
        $('#TaskClose').modal(options);
        $('#TaskClosedContent').html("<p class='text-center' style='font-size: 18px;margin-bottom: 30px;'>"+ data +"</p>");
        $('#TaskClose').modal("show");
        
    });
}

//Advance filter
function SubmitFilterSort(search, order, pSize) {
    $('#FilterModel').modal('hide');
    chkvalesArr = [];
    $("#example div").remove();
    $("#example").height(0);
    $('#loading').show();
    $('#loadingmessage').show();
    $('#Msg').hide();
    $.ajax({
        url: '/Tasks/AjaxPendingTasks',
        type: "POST",
        data: { start: 0, pSize: pSize, search: search, order: order },
        success: function (data) {
            sessionStorage.setItem("Total", data.recordsTotal);
            loadData(data);
        },
        error: function (data) {
            alert("Failed");
        }
    });

}

function chkCheckUncheck(ctrl) {
    if (ctrl.checked) {
        var index = chkvalesArr.indexOf($(ctrl).val());
        if (index == -1) {
            chkvalesArr.push($(ctrl).val());
        }
    }
    else {
        var index = chkvalesArr.indexOf($(ctrl).val());
        if (index > -1) {
            chkvalesArr.splice(index, 1);
        }
    }
}

function Allselection() {
    if (!selectAll) {
        selectAll = true;
        $("#subDiv #subDivLable").text("Clear selections");
    }
    else {
        selectAll = false;
        $("#selectall").prop('checked', false);
        $('.checkboxall').each(function () {
            $(".checkboxall").prop('checked', false);
        })
        chkvalesArr = [];
        $("#subDiv").hide();
    }

}

function DoSearch() {
    $(".filterclose").removeClass("DatesMargin");
    var ValueToSearch = $("#filterText").val().trim();
    var filterSelected = $("#filter").val();
    var filter = filterSelected.split(":")
    var col = ""
    var search = ""
    var searchMsg = "";
    if ($("#filterText").val() != "" || $("#filterText").val() != "undefined") {
        if (filter[0] == 5) {
            value = $("#filterText").val();
            col = "TaskTitle";
            search = ValueToSearch + "," + col + ":String";
            searchMsg = "Search Results: Task Title <span class='' style='font-weight: 600'> '" + ValueToSearch + "'</span>";
        }
        if (filter[0] == 4) {
            value = $("#filterText").val();
            col = "p_crmtasks";
            search = ValueToSearch + "," + col + ":Integer";
            searchMsg = "Search Results: TaskId <span class='' style='font-weight: 600'> '" + ValueToSearch + "'</span>";
        }
        if (filter[0] == 6) {
            value = $("#filterText").val();
            col = "TaskDescription";
            search = ValueToSearch + "," + col + ":String";
            searchMsg = "Search Results: Task Description <span class='' style='font-weight: 600'> '" + ValueToSearch + "'</span>";
        }
        $(".filterclose").show();
        JSON.stringify(search);
        sessionStorage.setItem("search", search);
        var pSize = sessionStorage.getItem("PageSize");
        chkvalesArr = [];
        $("#example div").remove();
        $("#example").height(0);
        $("#loading").show();
        $('#loadingmessage').show();

        $.ajax({
            url: '/Tasks/AjaxPendingTasks',
            type: "POST",
            data: { start: 0, pSize: pSize, search: search },
            success: function (data) {
                $(".resultDiv .result-msg").html("<p>"+searchMsg+"</p>");
                $(".resultDiv").show();
                sessionStorage.setItem("Total", data.recordsTotal);
                loadData(data);
            },
            error: function (data) {
                alert("Failed");
            }
        });
    }
    return false;
}

function StartDateSearch() {
    value1 = $("#startDateC #min").val();
    value2 = $("#startDateC #max").val();
    col = "StartDate";
    search = value1 + "," + value2 + "," + col + ":Date";
    $(".filterclose").show();
    var searchMsg = "Search Results: Start Date From<span class='' style='font-weight: 600'>'" + value1 + "'</span> To <span class='' style='font-weight: 600'>'" + value2 + "'</span>";
    JSON.stringify(search);
    sessionStorage.setItem("search", search);
    var pSize = sessionStorage.getItem("PageSize");
    chkvalesArr = [];
    $("#example div").remove();
    $("#example").height(0);
    $("#loading").show();
    $('#loadingmessage').show();

    $.ajax({
        url: '/Tasks/AjaxPendingTasks',
        type: "POST",
        data: { start: 0, pSize: pSize, search: search },
        success: function (data) {
            $(".resultDiv .result-msg").html("<p>"+searchMsg+"</p>");
            $(".resultDiv").show();
            sessionStorage.setItem("Total", data.recordsTotal);
            loadData(data);
        },
        error: function (data) {
            alert("Failed");
        }
    });


}

function DueDateSearch() {
    value1 = $("#dueDateC #min").val();
    value2 = $("#dueDateC #max").val();
    col = "DueDate";
    search = value1 + "," + value2 + "," + col + ":Date";
    $(".filterclose").show();
    var searchMsg = "Search Results: Due Date From<span class='' style='font-weight: 600'>'" + value1 + "'</span> To <span class='' style='font-weight: 600'>'" + value2 + "'</span>";
    JSON.stringify(search);
    sessionStorage.setItem("search", search);
    var pSize = sessionStorage.getItem("PageSize");
    chkvalesArr = [];
    $("#example div").remove();
    $("#example").height(0);
    $("#loading").show();
    $('#loadingmessage').show();

    $.ajax({
        url: '/Tasks/AjaxPendingTasks',
        type: "POST",
        data: { start: 0, pSize: pSize, search: search },
        success: function (data) {
            $(".resultDiv .result-msg").html("<p>"+searchMsg+"</p>");
            $(".resultDiv").show();
            sessionStorage.setItem("Total", data.recordsTotal);
            loadData(data);
        },
        error: function (data) {
            alert("Failed");
        }
    });


}


function getMyTasks() {
    $(".filterclose").removeClass("DatesMargin");
    var col = "mytasks";
    var search = "y" + "," + col + ":string";
    $(".filterclose").show();
    JSON.stringify(search);
    sessionStorage.setItem("search", search);
    var pSize = sessionStorage.getItem("PageSize");
    chkvalesArr = [];
    $("#example div ").remove();
    $("#example").height(0);
    $("#loading").show();
    $('#loadingmessage').show();
    $.ajax({
        url: '/Tasks/AjaxPendingTasks',
        type: "POST",
        data: { start: 0, pSize: pSize, search: search },
        success: function (data) {
            $(".resultDiv .result-msg").html("<p>Search Results: <span class='' style='font-weight: 600'>'Your Tasks'</span></p>");
            $(".resultDiv").show();
            sessionStorage.setItem("Total", data.recordsTotal);
            loadData(data);
        },
        error: function (data) {
            alert("Failed");
        }
    });
}

$(document).ready(function () {
    sessionStorage.clear();
    //filter list filling logic
    //var d = $("#type2").val();
    var d = $("#fvalue").val();
    var m = [];
    m = d.split("|");
    var l;
    for (i = 0; i <= m.length - 1; i = i + 1) {
        l = m[i].split("~");
        $('#filter').append($('<option>', { value: l[1] + ":" + l[2], text: l[0] }));
    };
    var a = 1;

    sessionStorage.setItem("start", 0);
    sessionStorage.setItem("search", "");
    sessionStorage.setItem("order", "");
    var t = sessionStorage.getItem("PageSize");
    if (t == null) { t = 50 }
    var SelectedRows = "";
    GetData(0, t);
    //sessionStorage.setItem("search", null);

    var counter = 0;
    $("#Prev").on("click", function () {
        var a = sessionStorage.getItem("PageSize");
        var b = sessionStorage.getItem("search");
        var d = sessionStorage.getItem("start");
        var o = sessionStorage.getItem("order");
        var total = sessionStorage.getItem("Total");

        if (a != null) { d = (d - a) - 1; } else { d = (d - 50) - 1; }
        $("#example  div").remove();
        $("#example").height(0);
        $('#loading').show();
        $('#loadingmessage').show();
        $('#Msg').hide();
        if (d >= 0) {
            $.post('/Tasks/AjaxPendingTasks', { start: d, pSize: a, search: b, order: o, ServerOrderValue: "" }, function (data) {
                loadData(data);
            })
        }
    });
    $("#Next").on("click", function () {
        var b = sessionStorage.getItem("Total");
        var a = sessionStorage.getItem("PageSize");
        var c = sessionStorage.getItem("search");
        var d = sessionStorage.getItem("start");
        var o = sessionStorage.getItem("order");
        var total = sessionStorage.getItem("Total");

        if (a != null) { d = parseInt(d) + parseInt(a) - 1; } else { d = parseInt(d) + 50 - 1; }
        $("#example div").remove();
        $("#example").height(0);
        $('#loading').show();
        $('#loadingmessage').show();
        $('#Msg').hide();
        if (d < total) {
            $.post('/Tasks/AjaxPendingTasks', { start: d, pSize: a, search: c, order: o, ServerOrderValue: "" }, function (data) {
                loadData(data);
            })
        }
    });


    $("#filter").on("change", function () {
        var a = $("#filter").val();
        $(".filterDiv").css("display", "none")
        if (a != "0" && a != "1") {
            b = a.split(":");
            if (b[0] == 2) {
                var a = document.getElementById("startDateC")
                a.style.display = "";
            }
            else if (b[0] == 3) {
                var a = document.getElementById("dueDateC")
                a.style.display = "";
            }
            else if (b[0] == 4 || b[0] == 5 || b[0] == 6) {
                $("#TextC").css("display", "");
            } else if (b[0] == 7) {
                var a = document.getElementById("StatusC")
                a.style.display = "";
            }
            else if (b[0] == 8) {
                var a = document.getElementById("assignedtoC")
                a.style.display = "";
            }
            else if (b[0] == 9) {
                var a = document.getElementById("createdByC")
                a.style.display = "";
            }
            else if (b[0] == 10) {
                getMyTasks();
            }
            else if (b[0] == 11) {
                var a = document.getElementById("teamEmployeeC")
                a.style.display = "";
            }

        }
    });

    $("#StatusFilter").on("change", function () {
        $(".filterclose").removeClass("DatesMargin");
        var text = $("#StatusFilter option:selected").text();
        var value = $("#StatusFilter").val();
        var col = "Taskstatus";
        var search = value + "," + col + ":integer";
        $(".filterclose").show();
        JSON.stringify(search);
        sessionStorage.setItem("search", search);
        var pSize = sessionStorage.getItem("PageSize");
        $("#example div ").remove();
        $("#example").height(0);
        $("#loading").show();
        $('#loadingmessage').show();

        $.ajax({
            url: '/Tasks/AjaxPendingTasks',
            type: "POST",
            data: { start: 0, pSize: pSize, search: search },
            success: function (data) {
                $("#fText").text(text);
                $(".resultDiv .result-msg").html("<p>Search Results: Tasks Status <span class='' style='font-weight: 600'>'" + text + "'</span></p> ");
                $(".resultDiv").show();
                sessionStorage.setItem("Total", data.recordsTotal);
                loadData(data);
            },
            error: function (data) {
                alert("Failed");
            }
        });
    });

    $("#assignedTo").on("change", function () {
        $(".filterclose").removeClass("DatesMargin");
        var text = $("#assignedTo option:selected").text();
        var value = $("#assignedTo").val();
        var col = "Assignedto";
        var search = value + "," + col + ":integer";
        $(".filterclose").show();
        JSON.stringify(search);
        sessionStorage.setItem("search", search);
        var pSize = sessionStorage.getItem("PageSize");
        $("#example div ").remove();
        $("#example").height(0);
        $("#loading").show();
        $('#loadingmessage').show();

        $.ajax({
            url: '/Tasks/AjaxPendingTasks',
            type: "POST",
            data: { start: 0, pSize: pSize, search: search },
            success: function (data) {
                $("#fText").text(text);
                $(".resultDiv .result-msg").html("<p>Search Results: Task Assigned To <span class='' style='font-weight: 600'>'" + text + "'</span></p> ");
                $(".resultDiv").show();
                sessionStorage.setItem("Total", data.recordsTotal);
                loadData(data);
            },
            error: function (data) {
                alert("Failed");
            }
        });
    });

    $("#teamEmployee").on("change", function () {
        var text = $("#teamEmployee option:selected").text();
        var value = $("#teamEmployee").val();
        var col = "teamemptasks";
        var search = value + "," + col + ":integer";
        $(".filterclose").show();
        JSON.stringify(search);
        sessionStorage.setItem("search", search);
        var pSize = sessionStorage.getItem("PageSize");
        $("#example div ").remove();
        $("#example").height(0);
        $("#loading").show();
        $('#loadingmessage').show();
        $.ajax({
            url: '/Tasks/AjaxPendingTasks',
            type: "POST",
            data: { start: 0, pSize: pSize, search: search },
            success: function (data) {
                $("#fText").text(text);
                $(".resultDiv .result-msg").html("<p>Search Results: Team Member <span class='' style='font-weight: 600'>'" + text + "'</span> Tasks</p> ");
                $(".resultDiv").show();
                sessionStorage.setItem("Total", data.recordsTotal);
                loadData(data);
            },
            error: function (data) {
                alert("Failed");
            }
        });
    });

    $("#CreatedBy").on("change", function () {
        $(".filterclose").removeClass("DatesMargin");
        var text = $("#CreatedBy option:selected").text();
        var value = $("#CreatedBy").val();
        var col = "CreatedBY";
        var search = value + "," + col + ":integer";
        $(".filterclose").show();
        JSON.stringify(search);
        sessionStorage.setItem("search", search);
        var pSize = sessionStorage.getItem("PageSize");
        $("#example div ").remove();
        $("#example").height(0);
        $("#loading").show();
        $('#loadingmessage').show();

        $.ajax({
            url: '/Tasks/AjaxPendingTasks',
            type: "POST",
            data: { start: 0, pSize: pSize, search: search },
            success: function (data) {
                $("#fText").text(text);
                $(".resultDiv .result-msg").html("<p>Search Results: Tasks Created By <span class='' style='font-weight: 600'>'" + text + "'</span></p> ");
                $(".resultDiv").show();
                sessionStorage.setItem("Total", data.recordsTotal);
                loadData(data);
            },
            error: function (data) {
                alert("Failed");
            }
        });
    });


    $('#popover1').popover({
        html: true,
        trigger: 'manual',
        content: function () { return $('#popover_content_wrapper1').html(); }
    });
    $(document).on('click', '#popover1', function () {
        $(this).popover('toggle');
        $('#popover2').popover({
            html: true,
            trigger: 'manual',
            content: function () { return $('#popover_content_wrapper2').html(); }
        });
    });
    $(document).on('click', '#popover2', function () { $(this).popover('toggle'); });

    $(document).on('click', '.MoreDetails', function () {



    });
    $(function () {
        //function to show create task form in popup when clicking on icon
        $(".btn-CreateTask").click(function () {

            var $buttonClicked = $(this);

            $.ajax({
                type: "GET",
                url: "/Tasks/CRMTasksForm",
                contentType: "application/json; charset=utf-8",
                datatype: "json",
                data: { exitmode: "ManagePendingTasks", id: $("#grid1").val() },
                success: function (data) {
                    $('#CreateCRMTasks').html(data);
                    $('#CreateTasks').modal(options);
                    $('#CreateTasks').modal('show');
                    $(".PanelForm").css({ "border": "none", "box-shadow": "none", "width": "200px" });
                    $(".Task").css({ "margin-top": "0px", "margin-bottom": "20px" });
                    $(".hr").append('<hr />')
                    $(".hr").css("margin-bottom", "20px")
                    $(".mainpanel").css({ "margin-left": "0px", "padding-left": "5px", "width": "270px" });
                    $(".labeltext").css({ "margin-bottom": "10px" });
                    $(".forminput").css({ "margin-bottom": "15px" });
                    $(".mainbutton").css({ "margin": "20px 0px 20px 15px" });

                    $("#TaskDescription").empty();


                },
                error: function () {
                    $('#NoRow').modal(options);
                    var Mtitle = "Select a Row";
                    $('#NoRow .modal-title').text(Mtitle);
                    $('.modal-title').css('text-align', 'center');
                    $('#NoRow').modal('show');
                }
            });
        });
    });


    $('a').tooltip();

});

function removeFilter() {
    $(".filterDiv").css("display", "none")
    $("#StatusFilter").val(0);
    $("#assignedTo").val(0);
    $("#teamEmployee").val(0);
    $("#CreatedBy").val(0);
    $("#filter").val(0);
    $("#filterText").val("");
    $("#startDateC #min").val("");
    $("#startDateC #max").val("");
    $("#dueDateC #min").val("");
    $("#dueDateC #max").val("");
    $(".filterclose").hide();
    sessionStorage.setItem("search", "");
    sessionStorage.setItem("order", "");
}



//function to get pending task of logged in emp from backend
function GetData(start, PSize) {
    var search = sessionStorage.getItem("search");
    var order = sessionStorage.getItem("order");
    if (search=="") {
        $(".resultDiv .result-msg").html("");
        $(".resultDiv").hide();
    }
    chkvalesArr = [];
    $("#subDiv").hide();
    $("#example  div").remove();
    $("#example").height(0);
    $('#loading').show();
    $('#loadingmessage').show();
    $.post('/Tasks/AjaxPendingTasks', { start: start, pSize: PSize, search: search, order: order }, function (data) {
        sessionStorage.setItem("Total", data.recordsTotal);
        loadData(data);
    });
}

function reloadGrid() {
    $("#example  div").remove();
    //removeFilter();
    if ($(window).width() >= 600) {
        sessionStorage.setItem("start", 0);
        var t = sessionStorage.getItem("PageSize");
        if (t == null) { t = 50 }
        GetData(0, t)
        $(".left").removeClass("move");
        $(".h").show();
        $(".right").css('display', 'none');
        $("#dropdown").removeClass("setStyle");
    }
    else {
        sessionStorage.setItem("start", 0);
        var t = sessionStorage.getItem("PageSize");
        if (t == null) { t = 50 }
        GetData(0, t)
        // $(".reloadhide").hide();

    }

}


///old code
function subtask(ctrl) {
    var id = $(ctrl).parent().parent()[0].id;
    var Rowid = "#tr-" + id;
    var TaskPid = $(Rowid).children(1)[1].innerText;
    var TaskName = $(Rowid).children(1)[2].innerText;

    $.ajax({
        type: "GET",
        url: '/Tasks/CRMSubTasksForm?PCRMTasks=' + TaskPid,
        contentType: "application/json; charset=utf-8",
        datatype: "json",
        data: { exitmode: "ManagePendingTasks", PCRMTasks: TaskPid },
        success: function (data) {
            ;
            $('#CreateCRMSubTasks').html(data);
            $('#CreateSubTasks').modal(options);
            $('#CreateSubTasks').modal();
            $(".PanelForm").css({ "width": "252px" });
            $(".Task").css({ "margin-top": "0px", "margin-bottom": "10px" });
            $(".hr").css("margin-bottom", "20px")
            $(".hr").append('<hr />')
            $(".mainpanel").css({ "margin-left": "20px", "padding-left": "5px", "width": "270px" });
            $(".mainpanel").css('margin-top', '20px');
            $(".labeltext").css({ "margin-bottom": "10px" });
            //$(".forminput").css({ "margin-bottom": "15px" });
            $(".mainbutton").css({ "margin": "20px 0px 20px 15px" });

        },

    })
}

function EditTask(ctrl) {
    var id = $(ctrl).parent().parent()[0].id;
    $.ajax({
        type: "GET",
        url: '/Tasks/CRMTasksForm?exitmode=Edit&id=' + id,
        contentType: "application/json; charset=utf-8",
        datatype: "json",
        // bdata: { exitmode: "ManagePendingTasks", id: $("#grid1").val() },
        success: function (data) {
            ;
            $('#CreateCRMTasks').html(data);
            $('#CreateTasks').modal(options);
            $('#CreateTasks').modal('show');
            $(".PanelForm").css({ "border": "none", "box-shadow": "none", "width": "200px" });
            $(".Task").css({ "margin-top": "0px", "margin-bottom": "10px" });
            // $(".hr").append('<hr />')
            $(".hr").css("margin-bottom", "20px")
            $(".mainpanel").css({ "margin-left": "0px", "padding-left": "5px", "width": "270px" });
            $(".labeltext").css({ "margin-bottom": "10px" });
            $(".forminput").css({ "margin-bottom": "15px" });
            $(".mainbutton").css({ "margin": "20px 0px 20px 15px" });
            $(".cancel").attr("data-dismiss", "modal");

        },

    })
}

function SubmitTaskRemark() {
    var formdata = new FormData(document.getElementById('RemarkForm'))
    //Creating an XMLHttpRequest and sending
    var xhr = new XMLHttpRequest();
    xhr.open('POST', '/Tasks/AddTasksRemark');
    xhr.send(formdata);
    $('#Remark').modal("hide");

    xhr.onreadystatechange = function () {
        if (xhr.readyState == 4 && xhr.status == 200) {
            $('#TaskClosedContent').html('');
            $('#TaskClose').modal(options);
            $('#TaskClosedContent').html("<h3 class='text-center'>Remark added Successfully.</h3>");
            $('#TaskClose').modal("show");
            setTimeout(function () { $('#TaskClose').modal("hide"); }, 1000);
        }
    }
    return false;
}

function deleteCollaborator(id) {
    $.ajax({
        type: "GET",
        url: "/Tasks/DeleteCollaborator",
        contentType: "application/json; charset=utf-8",
        datatype: "json",
        data: { id: id },
        success: function (data) {
            if (data == "") {
                window.location.href = "/Home/LogOut";
                return true;
            }
            ;
            $('#ViewCollaborator').modal('hide');
            $('#TaskCollaborators').modal('hide');
            // $(".LoaderOverlay").hide();

            $('#TaskClosedContent').html('');
            $('#TaskClose').modal(options);
            $('#TaskClosedContent').html("<h3 class='text-center'>Collaborator deleted Successfully.</h3>");
            $('#TaskClose').modal("show");

            setTimeout(function () { $('#TaskClose').modal("hide"); }, 3000);
        },
        error: function () {
            alert("error")
        }
    });

}

function SubmitTaskCollaborator(ctrl) {

    //$(ctrl).attr("disabled", "true");
    var selectedCollaborator = $("#collaboratorId").val();
    var TaskId = $('#PTask').val();
    var Taskkey = $('#Taskkey').val();

    $.ajax({
        type: "POST",
        url: "/Tasks/AddTaskCollaborators",
        data: { Taskid: TaskId, Taskkey: Taskkey, collaboratorId: selectedCollaborator },
        success: function (data) {
            if (data == "") {
                window.location.href = "/Home/LogOut";
                return true;
            }
            ;
            // $(ctrl).attr("disabled", "false");
            $('#TaskCollaborators').modal('hide');
            // $(".LoaderOverlay").hide();

            $('#TaskClosedContent').html('');
            $('#TaskClose').modal(options);
            $('#TaskClosedContent').html("<h3 class='text-center'>Collaborator has been added Successfully.</h3>");
            $('#TaskClose').modal("show");

            setTimeout(function () { $('#TaskClose').modal("hide"); }, 3000);
        },
        error: function () {
            $('#NoRow').modal(options);
            var Mtitle = "Select a Row";
            $('#NoRow .modal-title').text(Mtitle);
            $('.modal-title').css('text-align', 'center');
            $('#NoRow').modal('show');
        }
    });

}

function CloseRemarkModal() {
    $('#Remark').modal('hide');
    popOverOpen = false;
}


//when a row is hover show controls
//function hoverId(ctrl) {
// if (popOverOpen == true) {
//$(".MoreDetails").not(CurrentHoverRowId).hide;
//} else {
//$(ctrl).find('.MoreDetails').hide();
//$(ctrl).find('.MoreDetails').css("display", "inline-flex");
//}
//}

//when row is not hover hide controls
//function hoverNot(ctrl) {
// $('.MoreDetails').hide();
// if (popOverOpen == true) {
//     $(CurrentHoverRowId).find('.MoreDetails').show();
// }
//}

//Show remarks of a task when clicking on the icon
function ViewRemarks(ctrl) {
    popoverClose()
    popOverOpen = true
    var id = $(ctrl).parent().parent()[0].id;
    var Rowid = "#tr-" + id;
    var TaskPid = $(Rowid).children(1)[1].innerText;
    CurrentHoverRowId = Rowid;

    // Popover Grid
    $("#ShowRemarksDiv div").remove();

    $(".popover-content div").empty();
    var morediv = $("#ShowRemarksDiv");
    var more = $("<div class='col-md-12 ShowRemarksTitle' style='' id='' ></div>");
    more.html(("<div class='col-md-1' style='text-align: center;padding-top:10px; margin-bottom:5px'><b>Sno.</b></div>")
        + " " + ("<div class='col-md-3' style='padding-left: 30px;padding-top:10px;margin-bottom:5px'><b>Remark</b></div>")
        + " " + ("<div class='col-md-3' style='text-align:center;padding-top:10px;margin-bottom:5px;padding-left: 0px;' ><b>Date</b> </div>")
        + " " + ("<div class='col-md-2' style='padding-left: 20px;text-align:center;padding-top:10px;margin-bottom:5px' > <b>Created By</b> </div>")
        + " " + ("<div class='col-md-2' style='text-align:center; padding-top:10px;margin-bottom:5px' > <b>FileName</b> </div>")
        + " " + ("<div class='col-md-1' style='padding-right: 0px; padding-top: 5px;'> <span class='close' onclick='popoverClose();' style='padding-bottom:20px; padding-left:20px; padding-right:5px; font-size:18px;'> &times; </span> </div>")
    );
    morediv.append(more);


    var more2 = $("<div class='col-md-12 ShowRemarksValueM' style='margin-bottom:40px' id='' ></div>");
    morediv.append(more2);

    var DataLoading = document.createElement('div');
    DataLoading.id = 'LoadingData';
    DataLoading.innerHTML = '...Loading...';
    DataLoading.className = 'col-md-12';
    $(DataLoading).css('text-align', 'center');
    $(DataLoading).css('margin-bottom', '10px');
    morediv.append(DataLoading);
    // $(this).popover('toggle');
    $(".ShowRemark").popover('toggle');

    $.ajax({
        type: "POST",
        url: "/Tasks/AddTasksRemarkData",
        data: { taskId: TaskPid },
        success: function (data) {
            if (data == "") {
                window.location.href = "/Home/LogOut";
                return true;
            }
            ;

            $(".popover-content").css("height", "500px")
            $(".popover-content").css("overflow-y", "scroll")
            var tblEmployee1 = $(".popover-content");

            var a = 1;
            $.each(data.data, function (index, item) {
                var m = (a) + index;
                var more1 = $("<div class='col-md-12 ShowRemarksValues'  style='' id='" + item.CRMCommunication_key + "'  class='col-md-12'>" + m + "</div>");
                more1.html(("<div class='col-md-1' style='margin-left:10px'>" + m + "</div>")
                    + " " + ("<div class='col-md-3' style='width:200px;min-height:20px' >" + item.Commtext + "</div>")
                    + " " + ("<div class='col-md-4' style='width:180px;padding-left: 0px;'  >" + item.FrmtCreationDate + " </div>")
                    + " " + ("<div class='col-md-2' style='padding-left:10px; width:130px; text-align:center;'>" + item.TextLogincode + " </div>")
                    + " " + ("<div class='col-md-2' style='padding-left:0px;padding-right:0px;'> <a href='" + item.LinkURL + "' download>" + item.FileName + "</a></div><div class='col-md-1'></div>")
                );
                tblEmployee1.append(more1);
            });

            if (data.recordsTotal == 0) {
                $(".popover-content #LoadingData").css('display', 'block');
                $(".popover-content #LoadingData").text('No Data');
            } else {
                $(".popover-content #LoadingData").css('display', 'none');
                $(".popover-content #LoadingData").text('');
            }


        },
        error: function () {
            alert("Error in loading data")
        }
    });

    // Popover Grid
    $('.ShowRemark').not(ctrl).popover('hide');
    $('.popover.fade.left.in').css('max-width', '804px');
    $('.popover.fade.left.in').css('max-height', '250px');
    $('.popover.fade.left.in').css('left', '-804px');
    $('.popover.fade.left.in').css('background-color', 'white');
    $('.popover.fade.left.in').css('top', '10px');
    //$('.popover.fade.left.in').css('width', '3000');
    $('.arrow').css('top', '13px');
    $('.popover-content').css('width', '801px');
    $('.popover-content').css('padding-top', '0px');
    $('.popover-content').css('overflow-y', 'scroll');
    $('.popover-content').css('max-height', '240px');
    //$('.popover-content').css('margin-bottom', '5px');

    event.preventDefault();
}
//Task Close functionality
function taskClose(ctrl) {
    var Rowid = $(ctrl).parent().parent()[0].id;

    $.ajax({
        type: "GET",
        url: "/Tasks/TaskClose",
        contentType: "application/json; charset=utf-8",
        datatype: "json",
        data: { id: Rowid },
        success: function (data) {
            if (data == "") {
                window.location.href = "/Home/LogOut";
                return true;
            }
            ;
            if (data == "HasSubTask") {
                $('#TaskClosedContent').html('');
                $('#TaskClose').modal(options);
                $('#TaskClosedContent').html("<h4 class='text-center text-alert'>This task contains Subtasks. Please close them to close task.</h4>");
                $('#TaskClose').modal('show');
                return false;
            } else {
                var MainDivid = "#MainDiv-" + Rowid
                $(MainDivid).remove();
                $('#TaskClosedContent').html('');
                $('#TaskClose').modal(options);
                //var Mtitle = "Task Closed Successfully"
                //$('#TaskClose .modal-title').text(Mtitle);
                $('#TaskClosedContent').html("<h4 class='text-center text-alert'>Task Closed Successfully</h4>");
                $('#TaskClose').modal('show');
                setTimeout(function () { $('#TaskClose').modal('hide'); }, 1000);
            }
        },
        error: function () {
            $('#TaskClosedContent').html('');
            $('#TaskClose').modal(options);
            $('#TaskClosedContent').html("<h3 class='text-center'>An error Occured.Please try again.</h3>");
            $('#TaskClose').modal('show');
        }
    });
    return false;
}
// function to close button on popover
function popoverClose() {
    popOverOpen = false
    $('.popover').hide();
    $('.MoreDetails').popover('hide');
    $(".disabled").removeClass("disabled");
    $("#ShowSubTaskControlDiv").popover('hide');
    $(".ShowRemark").popover('hide');
}

//function to show collaborators of a task when click on view Collaborator
function ShowCollaborators(ctrl) {
    // Popover Grid
    // popoverClose()

    var id = $(ctrl).parent().parent().parent().parent()[0].id;
    var Rowid = "#tr-" + id;
    var TaskPid = $(Rowid).children(1)[1].innerText;
    $.ajax({
        type: "POST",
        url: "/Tasks/AddCollaboratorsData",
        data: { taskId: TaskPid },
        success: function (data) {
            if (data == "") {
                window.location.href = "/Home/LogOut";
                return true;
            }

            //loadData1(data);

            var tblEmployee1 = $("#ShowCollaborators");
            $("#ShowCollaborators").empty();
            //$(".popover-content #LoadingData").css('display', 'none');
            var a = 1;
            $.each(data.data, function (index, item) {
                var m = (a) + index;

                var more1 = $("<div style='display:flex; height:20px; margin-bottom:10px; padding-left:0px' id='" + item.CRMCollaborator_key + "'  class='col-md-12 body'>" + m + "</div>");
                more1.html(("<div class='col-md-2 ViewcollaboratorsSno ' style=''>" + m + "</div>")
                    + " " + ("<div class='col-md-8 ViewcollaboratorsEmpName' style='' >" + item.TxtCollaborator + "</div>")
                    + " " + ("<div class='col-md-2 ViewcollaboratorsClose' style='' ><a class='' id='" + item.CRMCollaborator_key + "' onclick='deleteCollaborator(this.id," + id + ")'><i class='glyphicon glyphicon-remove'></i></a></div>")
                );
                tblEmployee1.append(more1);
            });

            $("#loading1").css("display", "none")
            if (data.recordsTotal == 0) {
                $(".popover-content #LoadingData").css('display', 'block');
                $(".popover-content #LoadingData").text('No Data');
            } else {
                $(".popover-content #LoadingData").css('display', 'none');
                $(".popover-content #LoadingData").text('');
            }
        },
        error: function () {
            alert("Error in loading data")
        }
    });

    $('#ViewCollaborator').modal(options);
    $('#ViewCollaborator').modal('show');
    event.preventDefault();
}

function AddRemarkFromDetailPane() {
    var TaskPid = $("#mtaskid").text();
    $('#RemarkTaskId').val(TaskPid);
    $('#RemarkText').val('');
    var TaskTitle = $("#mtasktitle").text();
    $('#Remark').modal(options);
    var Mtitle = "Task Title :  " + TaskTitle;
    $('#Remark .modal-title').text(Mtitle);
    $('#Remark').modal('show');
}

//function show add Remark modal
function AddRemark(ctrl) {
    var id = $(ctrl).parent().parent()[0].id;
    var Rowid = "#tr-" + id;
    var TaskPid = $(Rowid).children(1)[1].innerText;
    $('#RemarkTaskId').val(TaskPid);
    $('#RemarkText').val('');
    var TaskTitle = $(Rowid).children(1)[2].innerText;
    $('#Remark').modal(options);
    var Mtitle = "Task Title :  " + TaskTitle;
    $('#Remark .modal-title').text(Mtitle);
    $('#Remark').modal('show');
}

//function to show the controls of subtask in  popover
function ShowSubTaskControl(ctrl) {
    popoverClose()
    popOverOpen = true
    var id = $(ctrl).parent().parent()[0].id;
    var Rowid = "#tr-" + id;
    CurrentHoverRowId = Rowid;
    $(".ShowSubTaskControl").popover('toggle');
    $(".ShowSubTaskControlDiv").show();
    // Popover Grid
    $('.ShowSubTaskControl').not(ctrl).popover('hide');
    $('.popover.fade.right.in').css('width', '170px');
    $('.popover.fade.right.in').css('height', '70px');
    $('.popover.fade.right.in').css('left', '30px');
    $('.popover.fade.right.in').css('top', '40px');
    $('.popover.fade.right.in').css('max-width', 'none');
    $('.arrow').css('top', '-11px');
    $('.popover-content').css('width', '170px');
    $('.popover-content').css('height', '70px');
    $('.popover-content').css('padding', '5px 5px 9px 15px');
    event.preventDefault();
}
//Function to show the controls of collaborator in popover
function ShowCollaboratorsCtrls(ctrl) {
    popoverClose()
    popOverOpen = true
    var id = $(ctrl).parent().parent()[0].id;
    var Rowid = "#tr-" + id;
    CurrentHoverRowId = Rowid;
    $(".ShowCollaboratorsCtrls").popover('toggle');
    $(".ShowCollaboratorsCtrlsDiv").show();
    $('.popover-dismiss').popover({
        trigger: 'focus'
    })
    // Popover Grid
    $('.ShowCollaboratorsCtrls').not(ctrl).popover('hide');
    $('.popover.fade.right.in').css('width', '170px');
    $('.popover.fade.right.in').css('height', '60px');
    $('.popover.fade.right.in').css('left', '-20px');
    $('.arrow').css('top', '-11px');
    $('.popover-content').css('width', '180px');
    $('.popover-content').css('height', '70px');
    $('.popover-content').css('padding-top', '3px');
    $('.popover-content').css('padding-right', '5px');
    $('.popover-content').css('padding-left', '9px');

    event.preventDefault();
}

//function to show subtask of a task
function viewSubTask(ctrl) {
    popOverOpen = false
    var id = $(ctrl).parent().parent().parent().parent()[0].id;

    if ($('div').hasClass(id) == false) {
        $('#TaskClosedContent').html('');
        $('#TaskClose').modal(options);
        $('#TaskClosedContent').html("<h3 class='text-center'>No SubTask.</h3>");
        $('#TaskClose').modal("show");

        //setTimeout(function () { $('#TaskClose').modal("hide"); }, 1000);
        return false;
    }
    function popoverClose() {

    }



    var subtaskClass = "div." + id;
    $(subtaskClass).parent().toggle();
    var parentid = "#tr-" + id;
    var Mainparentid = "#MainDiv-" + id;
    var parent = $(parentid);
    var c = $(parentid).find('.MoreDetails');
    var b = $(Mainparentid).find('i');

    if (SubTaskPopupOpen == true) {

        SubTaskPopupOpen = false;
        $(Mainparentid).css('background-color', '#3c8dbc');
        $(Mainparentid).css('background-color', '#3c8dbc');
        $(c).css('background-color', '#3c8dbc');
        $(b).first().css('transition', 'transform .5s ease');
        $(b).first().css('transform', 'rotate(90deg)');




        //    $(parent).css('border-left-width', '4px');
        //    $(parent).css('border-left-style', 'solid');
        //    $(parent).css('border-left-color', '#3c8dbc');

        //    $(parent).css('border-right-width', '4px');
        //    $(parent).css('border-right-style', 'solid');
        //    $(parent).css('border-right-color', '#3c8dbc');

    }

    else {
        SubTaskPopupOpen = true;
        $(Mainparentid).css('background-color', 'white');
        $(c).css('background-color', 'white');
        $(b).first().css('transition', 'transform .5s ease');
        $(b).first().css('transform', 'rotate(0deg)');



        //    $(parent).css('border-left-width', '');
        //    $(parent).css('border-left-style', '');
        //    $(parent).css('border-left-color', '');

        //    $(parent).css('border-right-width', '');
        //    $(parent).css('border-right-style', '');
        //    $(parent).css('border-right-color', '');
    }
    event.preventDefault();

}

function GetSubTasksData(id, pid, ctrl) {
    var parent = ctrl.parentNode.id;
    var parentid = "#" + parent;
    var toggleDiv = $("#toggleDiv-" + id);
    toggleDiv.toggle();
    if ($(ctrl).hasClass('active') == false) {
        $(ctrl).addClass('active');
        var child = $(ctrl).children(1)[0];
        $(child).removeClass("fa-angle-right").addClass("fa-angle-down");
        $(ctrl).css('cursor', 'pointer');
        $(parentid).css('color', '#3c8dbc');
    }
    else {
        $(ctrl).removeClass('active');
        var child = $(ctrl).children(1)[0];
        $(child).removeClass("fa-angle-down").addClass("fa-angle-right");
        $(parentid).css('background-color', 'transparent');
        $(parentid).css('color', '#3c8dbc');
        var child = $(ctrl).children(1)[0];
        $(child).removeClass("fa-angle-down").addClass("fa-angle-right");

    }
    $.post('/Tasks/AjaxPendingSubTasks', { under: pid }, function (data) {
        if (data !== "") {
            LoadSubTasksData(data, id);
        }
    })

}

function LoadSubTasksData(data, id) {
    var toggleDiv = $("#toggleDiv-" + id);
    toggleDiv.empty();
    var m = 0;
    $.each(data.data, function (index, item) {
        m = m + 1;
        var SubParentdiv = $("<div id='MainDiv-" + item.CRMTasks_Key + "'' class='col-md-12 sub clickable' style='widht:100%; margin-left: 0px; display: inline-flex;border-left: 3px solid #367fa9; padding:20px; background-color:#e9f0f3;'  ></div>");
        toggleDiv.append(SubParentdiv);
        var div = $("<div id='tr-" + item.CRMTasks_Key + "' class='collapse tr " + item.CRMTasks_Key + "' style='  widht:100%; display:inline-flex; position:relative;  padding:0px;  font-size:12px; font-family: open sans,sans-serif;'></div>"); //onmouseover='hoverId(this)' onmouseout='hoverNot(this)'
        div.html(("<input type='checkbox' class='checkboxall'' value='checkbox1' style='margin-top: 5px; margin-right:0px;' /><div class='SubTaskSno td'  style='width: 12%; text-align:center; padding-left:8px; padding-right:8px;'> &nbsp; " + m + "</div>")
            + " " + ("<div class='SubTaskid td' style='width: 7%; text-align:left; padding-left:8px; padding-right:8px;'>" + item.P_CRMTasks + "</div>")
            + " " + ("<div class='SubTasktitle td' style='width:11%; text-align:left; padding-left:8px; padding-right:8px;'>" + item.TaskTitle + "</div>")
            + " " + ("<div class='SubTaskdescription td ' style='width:23%; text-align:left; padding-left:8px; padding-right:8px;'>" + item.TaskDescription + "</div>")
            + " " + ("<div class='SubTaskstatus td' style='width: 11%; text-align:left; padding-left:8px; padding-right:8px;' data-taskstatus='" + item.Taskstatus + "'>" + item.TextTaskStatus + "</div>")
            + " " + ("<div  class='SubTaskStartdate td h' style='width: 11%; text-align:left; padding-left:8px; padding-right:8px;'>" + item.FrmtStartDate + "</div>")
            + " " + ("<div class='SubTaskDuedate td' style='width:11%;  text-align:left;padding-left:8px; padding-right:8px;'>" + item.FrmtDueDate + "</div>")
            + " " + ("<div class='TaskAssignedto td' style='width:11%;   text-align:center;  padding-left:8px; padding-right:8px; ' data-assignedto='" + item.Assignedto + "' >" + item.TextAssignedto + "</div>")
            + " " + ("<div class='Taskcreateby td ' style='width:12%; color:transparent;  text-align:center; padding-left:8px; padding-right:8px;' data-assignedto='' >" + item.TextCreatedBy + "</div>"));
        SubParentdiv.append(div);

    });
}

//function to show subtask of a task by caret
function viewSubTaskbycaret(id, ctrl) {

    var parent = ctrl.parentNode.id;
    var parentid = "#" + parent;
    var c = $(parentid).find('.MoreDetails');
    $(c).css('background-color', '#3c8dbc');

    popOverOpen = false
    if ($(ctrl).hasClass('active') == false) {
        $(ctrl).addClass('active');
        //$(ctrl).css('transition', 'transform .5s ease');
        //$(ctrl).css('transform', 'rotate(90deg)');
        var child = $(ctrl).children(1)[0];
        $(child).removeClass("fa-angle-right").addClass("fa-angle-down");


        $(ctrl).css('cursor', 'pointer');
        // $(parentid).css('background-color', '#3c8dbc');
        $(parentid).css('color', '#3c8dbc');

        //$('.SubTasksHeadingdiv').html("<i class='fa fa-eye' style='font-size:16px; color:#616A6B; opacity:1;margin-left: 5px;float:left;'></i>&nbsp; SubTasks");
        //$('.SubTasksHeadingdiv').html("<i class='fa fa-plus' style='font-size:17px; color:#616A6B; opacity:1;margin-left:5px;float:right;'></i><i class='fa fa-eye' style='font-size:16px; color:#616A6B; opacity:1;margin-left: 5px;float:left;'></i>&nbsp; SubTasks");
        //$('.AddSubTasksDiv').css("display", "block");
        // $('.SubTasksHeadingdiv').css("display", "block");
    }
    else {
        $(ctrl).removeClass('active');
        //$(ctrl).css('transition', 'transform .5s ease');
        //$(ctrl).css('transform', 'rotate(0deg)');
        var child = $(ctrl).children(1)[0];
        $(child).removeClass("fa-angle-down").addClass("fa-angle-right");
        $(c).css('background-color', 'white');
        $(parentid).css('background-color', 'transparent');
        $(parentid).css('color', '#3c8dbc');
        //$(c).css('background-color', 'white');
        var child = $(ctrl).children(1)[0];
        $(child).removeClass("fa-angle-down").addClass("fa-angle-right");




        // $('.SubTasksHeadingdiv').text("");
        // $('.AddSubTasksDiv').text("");
        // $('.AddSubTasksDiv').css("display", "none");
        // $('.SubTasksHeadingdiv').css("display", "none");
    }

    if ($('div').hasClass(id) == false) {
        $('#TaskClosedContent').html('');
        //$('.viewSubTaskbycaret').ctrl().toggle();
        $('#TaskClose').modal(options);
        $('#TaskClosedContent').html("<h3 class='text-center'>No SubTask.</h3>");
        $('#TaskClose').modal("show");
        //setTimeout(function () { $('#TaskClose').modal("hide"); }, 1000);
        return false;
    }

    function CaretAddsubtask(id, ctrl) {

        var Rowid = "#tr-" + id;
        var TaskPid = $(Rowid).children(1)[1].innerText;
        var TaskName = $(Rowid).children(1)[2].innerText;

        $.ajax({
            type: "GET",
            url: '/Tasks/CRMSubTasksForm?PCRMTasks=' + TaskPid,
            contentType: "application/json; charset=utf-8",
            datatype: "json",
            data: { exitmode: "ManagePendingTasks", PCRMTasks: TaskPid },
            success: function (data) {
                ;
                $('#CreateCRMSubTasks').html(data);
                $('#CreateSubTasks').modal(options);
                $('#CreateSubTasks').modal();
                $(".PanelForm").css({ "width": "252px" });
                $(".Task").css({ "margin-top": "0px", "margin-bottom": "10px" });
                $(".hr").css("margin-bottom", "20px")
                $(".hr").append('<hr />')
                $(".mainpanel").css({ "margin-left": "20px", "padding-left": "5px", "width": "270px" });
                $(".mainpanel").css('margin-top', '20px');
                $(".labeltext").css({ "margin-bottom": "10px" });
                //$(".forminput").css({ "margin-bottom": "15px" });
                $(".mainbutton").css({ "margin": "20px 0px 20px 15px" });

            },

        })
    }
    function popoverClose() {

    }
    var subtaskClass = "div." + id;
    $(subtaskClass).parent().toggle();

    var parentid = "#tr-" + id;
    var parent = $(parentid);
}

//function to show Add Collaborator modal
function AddCollaborator(ctrl) {
    popOverOpen = false
    var id = $(ctrl).parent().parent().parent().parent()[0].id;
    var Rowid = "#tr-" + id;
    var TaskPid = $(Rowid).children(1)[1].innerText;

    $('#PTask').val(TaskPid);
    $('#Taskkey').val(id);
    $('#TaskCollaborators').modal(options);
    $('#TaskCollaborators').modal('show');
}

$('#example').on('contextmenu', 'div.parentdiv', function (e) {
    //    if ($(this).hasClass('highlight')) {
    //    }
    //    else {
    //        var row = table.$('div.highlight').find("div:first input");
    //        if ($(row).prop("checked") == true) {
    //            $(row).prop("checked", false);
    //        }
    //        table.$('div.highlight').removeClass('highlight');
    //        $(this).addClass('highlight');
    //        $(this).find("div:first input").prop("checked", true);

    //    }
});
//$.contextMenu({
//    selector: '#example div.parentdiv',
//    build: function ($trigger) {
//        var options = {
//            callback: function (key, options) {
//                //var m = "clicked: " + key + options.$trigger[0].cells[0].children[0].childNodes[0].id + "" + options.$trigger[0].cells[3].textContent;
//                var divid = options.$trigger[0].id;
//                var temp = divid.split("-");
//                var id = temp[1];
//                //window.console && console.log(m) || alert(m);
//                switch (key) {
//                    case "taskClose":
//                        $.ajax({
//                            type: "GET",
//                            url: "/Tasks/TaskClose",
//                            contentType: "application/json; charset=utf-8",
//                            datatype: "json",
//                            data: { id: id },
//                            success: function (data) {
//                                if (data == "") {
//                                    window.location.href = "/Home/LogOut";
//                                    return true;
//                                }
//                                ;
//                                if (data == "HasSubTask") {
//                                    $('#TaskClosedContent').html('');
//                                    $('#TaskClose').modal(options);
//                                    $('#TaskClosedContent').html("<h4 class='text-center text-alert'>This task contains Subtasks. Please close them to close task.</h4>");
//                                    $('#TaskClose').modal('show');
//                                    return false;
//                                } else {
//                                    var MainDivid = "#MainDiv-" + id
//                                    $(MainDivid).remove();
//                                    $('#TaskClosedContent').html('');
//                                    $('#TaskClose').modal(options);
//                                    //var Mtitle = "Task Closed Successfully"
//                                    //$('#TaskClose .modal-title').text(Mtitle);
//                                    $('#TaskClosedContent').html("<h4 class='text-center text-alert'>Task Closed Successfully</h4>");
//                                    $('#TaskClose').modal('show');
//                                    setTimeout(function () { $('#TaskClose').modal('hide'); }, 1000);
//                                }
//                            },
//                            error: function () {
//                                $('#TaskClosedContent').html('');
//                                $('#TaskClose').modal(options);
//                                $('#TaskClosedContent').html("<h3 class='text-center'>An error Occured.Please try again.</h3>");
//                                $('#TaskClose').modal('show');
//                            }
//                        });
//                        break;
//                        //function add Remark modal
//                    case "AddRemark":
//                        var Rowid = "#tr-" + id;
//                        var TaskPid = $(Rowid).children(1)[1].innerText;
//                        $('#RemarkTaskId').val(TaskPid);
//                        $('#RemarkText').val('');
//                        var TaskTitle = $(Rowid).children(1)[2].innerText;
//                        $('#Remark').modal(options);
//                        var Mtitle = "Task Title :  " + TaskTitle;
//                        $('#Remark .modal-title').text(Mtitle);
//                        $('#Remark').modal('show');
//                        break;
//                        //function to ViewRemarks modal
//                    case "ViewRemarks":
//                        var Rowid = "#tr-" + id;
//                        var TaskPid = $(Rowid).children(1)[1].innerText;
//                        $.ajax({
//                            type: "POST",
//                            url: "/Tasks/AddTasksRemarkData",
//                            data: { taskId: TaskPid },
//                            success: function (data) {
//                                if (data == "") {
//                                    window.location.href = "/Home/LogOut";
//                                    return true;
//                                }
//                                ;
//                                var tblEmployee1 = $("#RemarkModalContent");
//                                tblEmployee1.empty();
//                                var a = 1;
//                                $.each(data.data, function (index, item) {
//                                    var m = (a) + index;
//                                    var more1 = $("<div class='col-md-6 ShowRemarksValues'  style=' padding-top:10px; width:730px;' id='" + item.CRMCommunication_key + "'</div>");
//                                    more1.html(("<div class='col-md-1' style='text-align: center; '>" + m + "</div>")
//                                        + " " + ("<div class='col-md-2' style='padding-left: 20px;' >" + item.Commtext + "</div>")
//                                        + " " + ("<div class='col-md-1' style='text-align: center;   padding-left: 0px; padding-left: 0px;'  >" + item.FrmtCreationDate + " </div>")
//                                        + " " + ("<div class='col-md-1' style=' text-align:center;   '>" + item.TextLogincode + " </div>")
//                                        + " " + ("<div class='col-md-1' style='text-align:center; margin-bottom:1px; padding-left:10px;'> <a href='" + item.LinkURL + "' download>" + item.FileName + "</a></div><div class='col-md-1'></div>")
//                                    );
//                                    tblEmployee1.append(more1);
//                                });
//                                if (data.recordsTotal == 0) {
//                                    $(".popover-content #LoadingData").css('display', 'block');
//                                    $(".popover-content #LoadingData").text('No Data');
//                                } else {
//                                    $(".popover-content #LoadingData").css('display', 'none');
//                                    $(".popover-content #LoadingData").text('');
//                                }
//                            },
//                            error: function () {
//                                alert("Error in loading data")
//                            }
//                        });
//                        $('#ViewRemarks').modal(options);
//                        $('#ViewRemarks').modal('show');
//                        event.preventDefault();
//                        break;
//                        //function add SubTask modal
//                    case "subtask":
//                        var Rowid = "#tr-" + id;
//                        var TaskPid = $(Rowid).children(1)[1].innerText;
//                        var TaskName = $(Rowid).children(1)[2].innerText;
//                        $.ajax({
//                            type: "GET",
//                            url: '/Tasks/CRMSubTasksForm?PCRMTasks=' + TaskPid,
//                            contentType: "application/json; charset=utf-8",
//                            datatype: "json",
//                            data: { exitmode: "ManagePendingTasks", PCRMTasks: TaskPid },
//                            success: function (data) {
//                                ;
//                                $('#CreateCRMSubTasks').html(data);
//                                $('#CreateSubTasks').modal(options);
//                                $('#CreateSubTasks').modal();
//                                $(".PanelForm").css({ "width": "252px" });
//                                $(".Task").css({ "margin-top": "0px", "margin-bottom": "10px" });
//                                $(".hr").css("margin-bottom", "20px")
//                                $(".hr").append('<hr />')
//                                $(".mainpanel").css({ "margin-left": "20px", "padding-left": "5px", "width": "270px" });
//                                $(".mainpanel").css('margin-top', '20px');
//                                $(".labeltext").css({ "margin-bottom": "10px" });
//                                //$(".forminput").css({ "margin-bottom": "15px" });
//                                $(".mainbutton").css({ "margin": "20px 0px 20px 15px" });
//                            },
//                        })
//                        break;
//                        //function to add Collaborators modal
//                    case "AddCollaborator":
//                        var Rowid = "#tr-" + id;
//                        var TaskPid = $(Rowid).children(1)[1].innerText;
//                        $('#PTask').val(TaskPid);
//                        $('#Taskkey').val(id);
//                        $('#TaskCollaborators').modal(options);
//                        $('#TaskCollaborators').modal('show');
//                        break;
//                        //function to view Collaborators modal
//                    case "ShowCollaborators":
//                        var Rowid = "#tr-" + id;
//                        var TaskPid = $(Rowid).children(1)[1].innerText;
//                        $.ajax({
//                            type: "POST",
//                            url: "/Tasks/AddCollaboratorsData",
//                            data: { taskId: TaskPid },
//                            success: function (data) {
//                                if (data == "") {
//                                    window.location.href = "/Home/LogOut";
//                                    return true;
//                                }
//                                ;
//                                //loadData1(data);
//                                var tblEmployee1 = $("#ShowCollaborators");
//                                $("#ShowCollaborators").empty();
//                                //$(".popover-content #LoadingData").css('display', 'none');
//                                var a = 1;
//                                $.each(data.data, function (index, item) {
//                                    var m = (a) + index;
//                                    var more1 = $("<div style='display:flex; height:20px; margin-bottom:10px; padding-left:0px' id='" + item.CRMCollaborator_key + "'  class='col-md-12 body'>" + m + "</div>");
//                                    more1.html(("<div class='col-md-2 ViewcollaboratorsSno ' style=''>" + m + "</div>")
//                                        + " " + ("<div class='col-md-8 ViewcollaboratorsEmpName' style='' >" + item.TxtCollaborator + "</div>")
//                                        + " " + ("<div class='col-md-2 ViewcollaboratorsClose' style='' ><a class='' id='" + item.CRMCollaborator_key + "' onclick='deleteCollaborator(this.id," + id + ")'><i class='glyphicon glyphicon-remove'></i></a></div>")
//                                    );
//                                    tblEmployee1.append(more1);
//                                });
//                                $("#loading1").css("display", "none")
//                                if (data.recordsTotal == 0) {
//                                    $(".popover-content #LoadingData").css('display', 'block');
//                                    $(".popover-content #LoadingData").text('No Data');
//                                } else {
//                                    $(".popover-content #LoadingData").css('display', 'none');
//                                    $(".popover-content #LoadingData").text('');
//                                }
//                            },
//                            error: function () {
//                                alert("Error in loading data")
//                            }
//                        });
//                        $('#ViewCollaborator').modal(options);
//                        $('#ViewCollaborator').modal('show');
//                        event.preventDefault();
//                        break;
//                        // function to edit task
//                    case "EditTask":
//                        var Rowid = "#tr-" + id;
//                        //var id = $(ctrl).parent().parent()[0].id;
//                        $.ajax({
//                            type: "GET",
//                            url: '/Tasks/CRMTasksForm?exitmode=Edit&id=' + id,
//                            contentType: "application/json; charset=utf-8",
//                            datatype: "json",
//                            // bdata: { exitmode: "ManagePendingTasks", id: $("#grid1").val() },
//                            success: function (data) {
//                                ;
//                                $('#CreateCRMTasks').html(data);
//                                $('#CreateTasks').modal(options);
//                                $('#CreateTasks').modal('show');
//                                $(".PanelForm").css({ "border": "none", "box-shadow": "none", "width": "200px" });
//                                $(".Task").css({ "margin-top": "0px", "margin-bottom": "10px" });
//                                $(".hr").append('<hr />')
//                                $(".hr").css("margin-bottom", "20px")
//                                $(".mainpanel").css({ "margin-left": "0px", "padding-left": "5px", "width": "270px" });
//                                $(".labeltext").css({ "margin-bottom": "10px" });
//                                $(".forminput").css({ "margin-bottom": "15px" });
//                                $(".mainbutton").css({ "margin": "20px 0px 20px 15px" });
//                                $(".cancel").attr("data-dismiss", "modal");
//                            },
//                        })
//                        break;
//                        //fuction to view subtasks
//                    case "viewSubTask":
//                        popOverOpen = false
//                        var subtaskClass = "div." + id;
//                        $(subtaskClass).parent().toggle();
//                        break;
//                    case "CreatedByMe":
//                        $.ajax({
//                            type: "GET",
//                            url: "/CRM/FilterPendingTask",
//                            contentType: "application/json; charset=utf-8",
//                            datatype: "json",
//                            data: { filterText: "CreatedByMe" },
//                            success: function (data) {
//                                loadData(data);
//                                $("#fText").text("Created By Me");
//                                $("#FilterText").show();
//                            }
//                        })
//                        break;
//                    case "Collaborate":
//                        $.ajax({
//                            type: "GET",
//                            url: "/CRM/FilterPendingTask",
//                            contentType: "application/json; charset=utf-8",
//                            datatype: "json",
//                            data: { filterText: "Collaborate" },
//                            success: function (data) {
//                                loadData(data);
//                                $("#fText").text("Collaborate with me");
//                                $("#FilterText").show();
//                            }
//                        })
//                        break;
//                    case "Assigned":
//                        $.ajax({
//                            type: "GET",
//                            url: "/CRM/FilterPendingTask",
//                            contentType: "application/json; charset=utf-8",
//                            datatype: "json",
//                            data: { filterText: "Assigned" },
//                            success: function (data) {
//                                loadData(data);
//                                $("#fText").text("Assigned To me");
//                                $("#FilterText").show();
//                            }
//                        })
//                        break;
//                    case "TeamTasks":
//                        $.ajax({
//                            type: "GET",
//                            url: "/Tasks/AjaxTeamTasks",
//                            contentType: "application/json; charset=utf-8",
//                            datatype: "json",
//                            data: {},
//                            success: function (data) {
//                                loadData(data);
//                                $("#fText").text("Team Task");
//                                $("#FilterText").show();
//                            }
//                        })
//                        break;
//                    case "TeamFilter":
//                        $("#fText").text("Team Task");
//                        $("#FilterText").show();
//                        var options = {
//                            "backdrop": "static",
//                            keyboard: true
//                        };
//                        $('#EmployeeTasks').modal(options);
//                        $('#EmployeeTasks').modal('show');
//                        break;
//                }
//                function removeFilter1() {
//                    $("#loading").show();
//                    $.ajax({
//                        type: "GET",
//                        url: "/CRM/AjaxTeamTasks",
//                        contentType: "application/json; charset=utf-8",
//                        datatype: "json",
//                        data: {},
//                        success: function (data) {
//                            loadData(data);
//                            $("#fText1").text("");
//                            $("#FilterText1").show();
//                        }
//                    })
//                }
//            },
//            items: {},
//        }
//        if ($trigger.hasClass('parentdiv')) {
//            if ($("#Logintype").val() == "Manager") {
//                options.items.TaskClose = { name: "Close Task", icon: "fa-check" },
//                options.items.edit = { name: "Edit", icon: "fa-pencil" },
//                options.items.filter = {
//                    name: "Filter", icon: "fa-filter",
//                    "items": {
//                        "CreatedByMe": { name: "Created by me", icon: "fa-calendar-plus-o" },
//                        "Collaborate": { name: "Collaborator", icon: "fa-sitemap" },
//                        "Assigned": { name: "Assigned to me", icon: "fa-pencil-square-o" }
//                    }
//                },
//                options.items.TeamTasks = { name: "Team Tasks", icon: "fa-users" }
//                options.items.TeamFilter = { name: "Team Filter", icon: "fa-th-list" }
//            } else {
//                options.items.AddRemark = { name: "Add Remark", icon: "fa-plus" },
//                options.items.ViewRemarks = { name: "View Remark", icon: "fa-eye" },
//                options.items.subtask = { name: "Add SubTask", icon: "fa-plus" },
//                //name: "Sub Tasks",     icon: "fa-copy",
//                //       "items": {
//                //      "Add subtask":      { name: "Add SubTask",    icon: "fa-plus" },
//                //     "viewSubTask":  { name: "View SubTasks",  icon: "fa-eye" },
//                //  }
//                // }
//                options.items.ShowCollaboratorsCtrls = {
//                    name: "Collaborators", icon: "fa-users",
//                    "items": {
//                        "AddCollaborator": { name: "Add Collaborator", icon: "fa-plus" },
//                        "ShowCollaborators": { name: "View Collaborator", icon: "fa-eye" },
//                    }
//                }
//                options.items.taskClose = { name: "Close Task", icon: "fa-check" },
//        options.items.EditTask = { name: "Edit", icon: "fa-pencil" },
//        options.items.filter = {
//            name: "Filter", icon: "fa-filter",
//            "items": {
//                "CreatedByMe": { name: "Created by me", icon: "fa-calendar-plus-o" },
//                "Collaborate": { name: "Collaborator", icon: "fa-sitemap" },
//                "Assigned": { name: "Assigned to me", icon: "fa-pencil-square-o" }
//            }
//        }
//            }
//        }
//        else {
//        }
//        return options;
//    }
//});
