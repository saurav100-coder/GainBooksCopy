@model CRMApp.Models.CustomerMaster
@{
    ViewData["Title"] = "CustomerForm";
}

@*@Optimization.Styles.Render("~/Content/CustomerForm")
@Optimization.Scripts.Render("~/bundles/CustomerForm")*@

<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-select@1.13.14/dist/css/bootstrap-select.min.css">
<script src="https://cdn.jsdelivr.net/npm/bootstrap-select@1.13.14/dist/js/bootstrap-select.min.js"></script>
@*Added by aslam*@
<link href="~/Content/Custom/CommonPage.css" rel="stylesheet" />

<link href="~/Content/CustomerForm.css" rel="stylesheet" />
<script src="~/Scripts/Custom/DealerRegForm.js"></script>
<script src="~/Scripts/Custom/CustomerForm.js"></script>
<link rel="stylesheet" href="~/Content/Custom/dropdown.css" />
<script src="~/Scripts/Custom/dropdown.js"></script>
<script src="~/Scripts/Custom/CompositeControls.js"></script>

<style>
    .list-items{
        width:100%;
    }
    .select-btn{
        width:100%;
    }
</style>
<script>
	$(document).ready(function () {
		var home = "";
		home = $("#TextHomeTown").val();
		$("#searchString").val(home);
		$(".ii").show();
		$("#TextHomeTown").hide();

        
        //var msg= "@ViewBag.message" ;
        var msg= "@TempData["Message"]" ;
        if(msg!== null && msg!=="")
        {
            ShowMsg(msg,"info");
        }
		
		//Added by aslam for compositefield
		if ("@Model.InfoString" != "null" && "@Model.InfoString" != "undefined" && "@Model.InfoString" != "") {
			createControls("@Model.InfoString");
		}
       
	});

	//function setCompositeFieldValue(fieldarr) {
	//	if (fieldarr[0]=="text"||fieldarr[0]=="date"||fieldarr[0]=="password"||fieldarr[0]=="email"||fieldarr[0]=="number"||fieldarr[0]=="dropdown"){
	//		$("#"+fieldarr[1]).val($.trim(fieldarr[2]));
	//	}
	//	else if(fieldarr[0]=="radio"){
	//		$("input[type="+fieldarr[0]+"][name="+ fieldarr[1] +"][value="+$.trim(fieldarr[2])+"]").attr("checked",true);
	//	}
	//	else if(fieldarr[0]=="checkbox"){
	//		$("input[type="+fieldarr[0]+"][name="+ fieldarr[1] +"]:checked").attr("checked",false);
	//		var valArr = $.trim(fieldarr[2]).split(",");
	//		$.each(valArr,function(index,item){
	//			$("input[type="+fieldarr[0]+"][name="+fieldarr[1]+"][value="+item+"]").attr("checked",true);
	//		});
	//	}
	//}

    function createControls(infostring) {
        var ctrlsArr = infostring.split("#");
        if ("@Model.Compositefield" != "null" && "@Model.Compositefield" != "undefined" && "@Model.Compositefield" != "") {
            var CompositeFieldString = "@Model.Compositefield";
            fieldsArr = CompositeFieldString.split("#");
        }
        for (var i = 0; i < ctrlsArr.length; i++) {
            var ctrlarr = ctrlsArr[i].split("~");
            var container = ""
            if (i % 2 == 0) {
                container = $('<div class="col-md-12" style="height:auto; overflow:auto;"></div>');
            }
            else {
                container = $("#gen1").children("div.col-md-12").last();
            }

            var fieldLabel = $.trim(ctrlarr[0]);
            var fieldType = $.trim(ctrlarr[1]);
            var fieldName = $.trim(ctrlarr[2]);
            var infotype = $.trim(ctrlarr[3]);
            var defaultvalue = $.trim(ctrlarr[4]);
            var fieldWrapper = $("<div class='col-md-6'>");
            var formGroup = $("<div class='form-group'>");
            fieldWrapper.append(formGroup);
            formGroup.append("<Label class='text-info'>" + fieldLabel + "</Label>");
            formGroup.append(makeCompositeFieldHtml(fieldLabel, fieldType, fieldName, infotype, defaultvalue));
            container.append(fieldWrapper);
            $("#gen1").append(container);

            if (fieldType == "text" || fieldType == "date" || fieldType == "password" || fieldType == "email" || fieldType == "number") {
                if (fieldsArr.length > 0) {
                    $.each(fieldsArr, function (index, item) {
                        var fieldarr = item.split("~")
                        if (fieldarr[1] == fieldName) {
                            setCompositeFieldValue(fieldarr);
                        }
                    });
                }
            }
        }
    }


	//function createControls(infostring) {
 //       var ctrlsArr = infostring.split("#");
 //       var fieldsArr="";
 //       if ("@Model.Compositefield" != "null" && "@Model.Compositefield" != "undefined" && "@Model.Compositefield" != ""){
 //           var CompositeFieldString = "@Model.Compositefield";
 //           fieldsArr= CompositeFieldString.split("#");
 //       }
 //       for (var i = 0; i < ctrlsArr.length; i++) {
 //           var ctrlarr=ctrlsArr[i].split("~");
 //           var container=""
 //           if (i % 2 == 0) {
 //               container = $('<div class="col-md-12" style="height:auto; overflow:auto;"></div>');
 //           }
 //           else {
 //               container = $("#gen1").children("div.col-md-12").last();
 //           }

 //           if (ctrlarr[1]=="text"||ctrlarr[1]=="date"||ctrlarr[1]=="password"||ctrlarr[1]=="email"||ctrlarr[1]=="number"){
 //               container.append("<div class='col-md-6'><div class='form-group'><Label class='text-info'>"+ ctrlarr[0] + "</Label>"
 //                                 +"<input type='"+ ctrlarr[1] +"' name='" + ctrlarr[2] +"' id='"+ ctrlarr[2] +"' value='"+ $.trim(ctrlarr[4]) +"' class='form-control input-sm' style='height: 27px;padding-top: 0px;padding-bottom: 0px;font-size: 15px;padding-left: 5px;' />"
 //                                 + "</div></div>");
 //               $("#gen1").append(container)

 //               if (fieldsArr.length>0){
 //                   $.each(fieldsArr,function(index,item){
 //                       var fieldarr= item.split("~")
 //                       if (fieldarr[0]==ctrlarr[1]) {
 //                           setCompositeFieldValue(fieldarr);
 //                       }
 //                   });
 //               }
 //           }
 //           else if(ctrlarr[1]=="dropdown"){
 //               container.append("<div class='col-md-6'><div class='form-group'><Label class='text-info'>" + ctrlarr[0] + "</Label>"
 //                        +"<select  name='" + ctrlarr[2] +"' id='"+ ctrlarr[2] +"'  class='form-control input-sm' style='height: 27px;padding-top: 0px;padding-bottom: 0px;font-size: 15px;padding-left: 5px;'></select>"
 //                         + "</div></div>");
 //               $("#gen1").append(container)

 //               var ddid="#"+ctrlarr[2] ;
 //               var ddvalue = $.trim(ctrlarr[4]);
 //               var ddType = ctrlarr[1];
 //               console.log("Before Post call =>" + ddid + "infotype:"+ctrlarr[3] );
 //               $.post('/sales/AjaxGetdataFromInfotableByInfotype',{infotype:ctrlarr[3]},function(data) {
 //               console.log("After Post call, before for each =>" + ddid+ "infotype:"+ctrlarr[3] );
 //                   var ddloptions="<option value=0>--Select--</option>";
 //                   if (data != "error") {
 //                       $.each(data.data,function(index, item){
 //                           ddloptions +="<option value="+ item.P_infotable +">"+ item.NameOfInfo +"</option>";
 //                       });
 //                   }
 //                   console.log("After  for each =>" + ddid + "infotype:"+ctrlarr[3]);
 //                   $(ddid).append(ddloptions);
 //                   if (ddvalue!="") {
 //                       $(ddid).val(ddvalue);
 //                   }
 //                   else{
 //                       $(ddid).val(0);
 //                   }

 //                   if (fieldsArr.length>0){
 //                       $.each(fieldsArr,function(index,item) {
 //                           var fieldarr= item.split("~")
 //                           if (fieldarr[0]==ddType) {
 //                               setCompositeFieldValue(fieldarr);
 //                           }
 //                       });
 //                   }

 //               });

 //           }
 //           else if(ctrlarr[1]=="radio"){
 //               container.append("<div class='col-md-6'><div class='form-group' style='width:300px;'><Label class='text-info'>" + ctrlarr[0] + "</Label><div class='row input-sm' style='padding:0;' id='radio-" + i + "'>"
 //                             + "</div></div>");
 //               $("#gen1").append(container)
 //               var radioname =ctrlarr[2];
 //               var defval = $.trim(ctrlarr[4]);
 //               var radiotype= ctrlarr[1];
 //               var radiodivid="#radio-"+i ;
 //               $.post('/sales/AjaxGetdataFromInfotableByInfotype',{infotype:ctrlarr[3]},function(data) {
 //                   var radiooptions="";
 //                   if (data!='error') {
 //                       $.each(data.data,function(index,item){
 //                           radiooptions+= "<div class='col-md-6'><input class='form-check-input' name='" + radioname +"' id='"+ radioname +"' style='margin-right:5px;' type='"+ radiotype +"' value='" + item.P_infotable +"' "
 //                           if (defval==item.P_infotable){
 //                               radiooptions+="checked"
 //                           };
 //                           radiooptions+= "/>"+ item.NameOfInfo +"</div>"
 //                       });
 //                       $(radiodivid).append(radiooptions);
 //                   }

 //                  if (fieldsArr.length>0){
 //                      $.each(fieldsArr,function(index,item) {
 //                          var fieldarr= item.split("~")
 //                          if (fieldarr[0]==radiotype) {
 //                              setCompositeFieldValue(fieldarr);
 //                          }
 //                      });
 //                   }
 //               });
 //           }
 //           else if (ctrlarr[1]=="checkbox") {
 //               container.append("<div class='col-md-6'><div class='form-group' style='width:300px;'><Label class='text-info'>" + ctrlarr[0] + "</Label><div class='row input-sm' style='padding:0;' id='checkbox-" + i + "'>"
 //                              + "</div>"
 //                              + "</div></div>");
 //               $("#gen1").append(container)

 //               var checkboxname = ctrlarr[2];
 //               var checkboxtype = ctrlarr[1];
 //               var checkboxdivid="#checkbox-"+i;
 //               var valueArr =$.trim(ctrlarr[4]).split(",");
 //               $.post('/sales/AjaxGetdataFromInfotableByInfotype',{infotype:ctrlarr[3]},function(data){
 //                   var checkoptions="";
 //                   if (data!="error") {
 //                       $.each(data.data,function(index,item){
 //                           checkoptions+="<label class='checkbox-inline'><input class='form-check-input' type='"+ checkboxtype +"' id='"+checkboxname+"' name='"+ checkboxname +"' value='"+ item.P_infotable +"' />"+ item.NameOfInfo +"</label>";
 //                       });
 //                       $(checkboxdivid).append(checkoptions);

 //                       $.each(valueArr,function(index,item) {
 //                           $("input[type="+checkboxtype+"][name="+ checkboxname +"][value="+item+"]").attr("checked",true);

 //                       });
 //                   }
 //                   if (fieldsArr.length>0){
 //                       $.each(fieldsArr,function(index,item) {
 //                           var fieldarr= item.split("~")
 //                           if (fieldarr[0]==checkboxtype) {
 //                               setCompositeFieldValue(fieldarr);
 //                           }
 //                       });
 //                   }

 //               });
 //           }
 //       }
 //   }

    function ConfirmSubmit(ctrlValue) {
        var Email = $("#Email").val();
        var Mobile = $("#MobNo").val();
        var Address = $("#PostalAddress1").val();
        var custcode = $("#CustCode").val().trim();
        var custName = $("#CustName").val().trim();
        var contactPerson = $("#Contactperson").val().trim();

        var EmailTrim = Email.trim();
        var MobileTrim = Mobile.trim();
        var AddressTrim = Address.trim();


        var b = $("#homeTown").val();
        var c = $("#hdn-hometown").val();
        var HomeTownTrim = c.trim();
        if (b == 0 || b == "null" || b == "undefined" || b == "") {
            $("#homeTown").val(c);
        }
        var value = document.getElementById("MainBussCode").value;
        //if (MobileTrim == "" || AddressTrim == "" || EmailTrim == "" || HomeTownTrim == "" || value == 0) {
        //if (MobileTrim == "") {
        //    $("#Msg").text('Mobile Number cannot be empty');
        //}
        if (MobileTrim == ""|| custcode == "" || custName == "" || contactPerson == "") {
            $("#Msg").text('Custcode, Company Name, Contact Person and Mobile cannot be empty');
        }
        else {
			$(".btn-Submit").attr("disabled", true);
			var d = $("#CustomerForm");
		    $("#CustomerForm").attr('action', '/Configuration/CustomerForm');
			d.submit();
        }
    }

   //Show Messages
function ShowMsg(msg, msgType) {
    var bgColor = "";
    switch ($.trim(msgType).toLowerCase()) {
        case "success":
            bgColor = "#4abc4a";
            break;

        case "info":
            bgColor = "#53bcf1";
            break;

        case "warning":
            bgColor = "#d0b62d";
            break;

        case "error":
            bgColor = "#e82121";
            break;

        default:
            bgColor = "#53bcf1";
    }

    $(".RemarkMessage").css("background-color", bgColor);
    $(".RemarkMessage #Content").text(msg);
    $('.RemarkMessage').show();
    setTimeout(function () { $('.RemarkMessage').hide(); }, 7000);    
    //if(bgColor == "#53bcf1"){
    //    console.log("testing")
	   // createControls("@Model.InfoString");

    //    //window.location.href = "/Configuration/CustomerForm"
    //}
}

</script>



<div class="RemarkMessage">
    <span id="Content"> </span>
    <span class="closebn" onclick="this.parentElement.style.display='none';">&times;</span>
</div>

<div class="cont" style="margin-bottom:50px">
    <div class="box-header">
        <div class="rr">
            <h2 class="text-info text-center">Customer Form</h2>
            <p id="Msg" class="text-danger text-center"></p>
        </div>
    </div>
    <form method="post" id="CustomerForm">
        @Html.AntiForgeryToken()
        @Html.ValidationSummary(true, "check details. Please Fill Form Correctly.", new {@class = "text-danger"})
        <div class="row">
            <div id="gen1">
                <p class="center text-center" style="">General Details</p>
                <div class="col-md-12" style="height:auto; overflow:auto;">
                    <div class="col-md-6">
                        <div class="form-group">
                            @Html.HiddenFor(model=> model.Customers_Key)
                            @Html.HiddenFor(model=>model.P_Customers)
                            @Html.HiddenFor(model=> model.exitmode)
                            @Html.HiddenFor(model=> model.p_acccode)
                            @Html.HiddenFor(model=> model.ActivationDate)
                            <label class="text-info">CustCode<span style="color:red">*</span></label>
                           
                            @if(Model.CustCode?.Trim() !="" & Model.P_Customers!=-1)
                            {
                                @Html.TextBoxFor(model=> model.CustCode, new {@readonly = "true", @maxlength = "8", @class = "form-control input-md", @style = "height: 27px;padding-top: 0px;padding-bottom: 0px;font-size: 15px;padding-left: 5px;", @required = "true", @placeholder = "ABCD0001"})
                            }
                            else
                            {
                              @Html.TextBoxFor(model=> model.CustCode, new {@maxlength = "8", @class = "form-control input-md", @style = "height: 27px;padding-top: 0px;padding-bottom: 0px;font-size: 15px;padding-left: 5px;", @required = "true", @placeholder = "ABCD0001"})
                            }
                            
                            @Html.ValidationMessageFor(model=> model.CustCode, "", new {@class = "text-danger"})
                        </div>
                    </div>
                    <div class="col-md-6">
                        <div class="form-group">
                            <label class="text-info">Company Name<span style="color:red">*</span></label>
                            @Html.TextBoxFor(model=> model.CustName, new {@class = "form-control input-sm", @style = "height: 27px;padding-top: 0px;padding-bottom: 0px;font-size: 15px;padding-left: 5px;", @required = "true"})
                            @Html.ValidationMessageFor(model=> model.CustName, "", new {@class = "text-danger"})
                        </div>
                    </div>
                </div>
                <div class="col-md-12" style="height:auto; overflow:auto;">
                    <div class="col-md-6">
                        <div class="form-group">
                            <label class="text-info">Contact Person<span style="color:red">*</span></label>
                            @Html.TextBoxFor(model=> model.Contactperson, new {@class = "form-control input-sm", @style = "height: 27px;padding-top: 0px;padding-bottom: 0px;font-size: 15px;padding-left: 5px;", @required = "true"})
                            @Html.ValidationMessageFor(model=> model.Contactperson, "", new {@class = "text-danger"})
                        </div>
                    </div>
                    <div class="col-md-6">
                        <div class="form-group">
                            <label class="text-info">Mobile<span style="color:red">*</span></label>
                            @Html.TextBoxFor(model=> model.MobNo, new {@maxlength = "10", @class = "form-control input-sm", @required = "true", @style = "height: 27px;padding-top: 0px;padding-bottom: 0px;font-size: 15px;padding-left: 5px;", @onkeypress = "return isNumberKey(event)"})
                            @Html.ValidationMessageFor(model=> model.MobNo, "", new {@class = "text-danger"})
                        </div>
                    </div>
                </div>
                <div class="col-md-12" style="height:auto; overflow:auto;">
                    <div class="col-md-6">
                        <div class="form-group">
                            <label class="text-info">Phone</label>
                            @Html.TextBoxFor(model=> model.Phone, new {@maxlength = "10", @class = "form-control input-sm", @style = "height: 27px;padding-top: 0px;padding-bottom: 0px;font-size: 15px;padding-left: 5px;", @onkeypress = "return isNumberKey(event)"})
                        </div>
                    </div>
                    <div class="col-md-6">
                        <div class="form-group">
                            <label class="text-info">Email</label>
                            @Html.TextBoxFor(model=> model.Email, new {@class = "form-control input-sm", @style = "height: 27px;padding-top: 0px;padding-bottom: 0px;font-size: 15px;padding-left: 5px;"})
                            @Html.ValidationMessageFor(model=> model.Email, "", new {@class = "text-danger"})
                        </div>
                    </div>
                </div>
                <div class="col-md-12" style="height:auto; overflow:auto;">
                    <div class="col-sm-6 col-md-6">
                        <div class="hometown form-group" style="">
                            <label class="text-info">Home Town </label>
                            @Html.TextBoxFor(model=> model.TextHomeTown, new {@class = "form-control input-sm", @style = "height: 27px;padding-top: 0px;padding-bottom: 0px;font-size: 15px;padding-left: 5px;"})
                            <input type="hidden" id="hdn-hometown" value="@Model.HomeTown" />
                            <div class="ii">
                                @*Aslam_ Commented at this time, but need to update it after*@
                                @*@Html.Action("LocationGrid", "CRM", new {@id = "LocationGrid"})*@
                                @await Component.InvokeAsync("LocationGrid")
                            </div>
                        </div>
                    </div>
                    <div class="col-md-6">
                        <div class="form-group">
                            <label class="text-info">PinCode</label>
                            @Html.TextBoxFor(model=> model.Pincode, new {@class = "form-control input-sm", @style = "height: 27px;padding-top: 0px;padding-bottom: 0px;font-size: 15px;padding-left: 5px;"})
                        </div>
                    </div>
                </div>
                <div class="PostalAddressmain col-md-12" style="">
                    <div class="col-md-6">
                        <div class="form-group">
                            <label class="text-info">Postal Address</label>
                            @Html.TextBoxFor(model=> model.PostalAddress1, new {@class = "form-control input-sm", @style = "height: 27px;padding-top: 0px;padding-bottom: 0px;font-size: 15px;padding-left: 5px;"})
                        </div>
                    </div>
                    <div class="PostalAddress col-md-6">
                        <div class="form-group">
                            <label class="text-info"></label>
                            @Html.TextBoxFor(model=> model.PostalAddress2, new {@class = "form-control input-sm p2", @style = "height: 27px;padding-top: 0px;padding-bottom: 0px;font-size: 15px;padding-left: 5px;"})
                        </div>
                    </div>
                </div>
                <div class="col-md-12" style="">
                    <div class="col-md-6">
                        <div class="form-group">
                            @Html.TextBoxFor(model=> model.PostalAddress3, new {@class = "form-control input-sm", @style = "height: 27px;padding-top: 0px;padding-bottom: 0px;font-size: 15px;padding-left: 5px;"})
                        </div>
                    </div>
                    <div class="col-md-6">
                        <div class="form-group">
                            @Html.TextBoxFor(model=> model.PostalAddress4, new {@class = "form-control input-sm", @style = "height: 27px;padding-top: 0px;padding-bottom: 0px;font-size: 15px;padding-left: 5px;"})
                        </div>
                    </div>
                </div>

                @if (Model.exitmode == "create")
                {
                    <div class="col-md-12">
                        <div class="col-md-6">
                            <div class="form-group">
                                <label class="text-info">Tags</label>
                              
                                 @Html.List_Search_Multi("multiTags", "79", "-Select Tags-", 0,"", new {@class = ""}, false)
                                 
                                @*@Html.List_Search("frmTags", "79", "-Select Tag-", 0,"", new {@class = "form-control input-sm", @style = "height: 27px;padding-top: 0px;padding-bottom: 0px;font-size: 15px;padding-left: 5px;"}, false)*@
                            </div>
                        </div>
                    </div>    
                }

            </div>
        </div>
        <br />
        <div class="row">
            <div id="oth1">
                <div class="col-md-12">
                    <p class="text-center extra" style="margin-bottom:20px; font-size:20px; background-color:lightsteelblue">Others Details</p>
                    <div class="col-md-6">
                        <div class="form-group">
                            <label class="text-info">Business Type</label>
                            @Html.List_Search("MainBussCode", "7", "- Select BusinessTypes -", Model.MainBussCode, "", new {@class = "form-control input-sm", @style = "height: 27px;padding-top: 0px;padding-bottom: 0px;font-size: 15px;padding-left: 5px;"})
                        </div>
                    </div>
                    <div class="col-md-6">
                        <div class="form-group">
                            <label class="text-info">Product</label>
                            @Html.List_Search("ProductCode", "15", "- Select Product -", Model.ProductCode, "", new {@class = "form-control input-sm", @style = "height: 27px;padding-top: 0px;padding-bottom: 0px;font-size: 15px;padding-left: 5px;"})
                        </div>
                    </div>
                </div>
                
                <div class="col-md-12">
                    <div class="col-md-6">
                        <div Class="form-group">
                            <Label Class="text-info">Website</Label>
                            @Html.TextBoxFor(model=> model.website, new {@class = "form-control input-sm", @style = "height: 27px;padding-top: 0px;padding-bottom: 0px;font-size: 15px;padding-left: 5px;"})
                        </div>
                    </div>
                    <div class="col-md-6">
                        <div class="form-group" id="SaleE">
                            <label class="text-info">Facebook ID</label>
                            @Html.TextBoxFor(model=> model.Facebookid, new {@class = "form-control input-sm", @style = "height: 27px;padding-top: 0px;padding-bottom: 0px;font-size: 15px;padding-left: 5px;"})
                        </div>
                    </div>
                </div>
                <div class="col-md-12">
                    <div class="col-md-6">
                        <div Class="form-group">
                            <Label Class="text-info">Twitter ID</Label>
                            @Html.TextBoxFor(model=> model.Twitterid, new {@class = "form-control input-sm", @style = "height: 27px;padding-top: 0px;padding-bottom: 0px;font-size: 15px;padding-left: 5px;"})
                        </div>
                    </div>
                    <div Class="col-md-6">
                        <div Class="form-group">
                            <Label for="title" class="text-info">LinkedIn</Label>
                            @Html.TextBoxFor(model=> model.Linkedin, new {@class = "form-control input-sm", @style = "height: 27px;padding-top: 0px;padding-bottom: 0px;font-size: 15px;padding-left: 5px;"})
                        </div>

                    </div>
                </div>
                <div class="col-md-12">
                    <div Class="col-md-6">
                        <div Class="form-group">
                            <Label Class="text-info"> Customer Status</Label>
                            @*@Html.DropDownListFor(model=> model.CustomerStatus, new SelectListItem() {new SelectListItem() {@Text = "Select", @Value = ""}, new SelectListItem()  {@Text = "Pending", @Value = "P"}, new SelectListItem()  {@Text = "Matured", @Value = "M"}, new SelectListItem()  {@Text = "Left", @Value = "L"}}, new {@id = "cs", @class = "form-control input-sm", @style = "height: 27px;padding-top: 0px;padding-bottom: 0px;font-size: 15px;padding-left: 5px;"})*@
                            @{
                                List<SelectListItem> listItems = new List<SelectListItem>();
                                listItems.Add(new SelectListItem("Select",""));
                                listItems.Add(new SelectListItem("Pending","P"));
                                listItems.Add(new SelectListItem("Matured","M"));
                                listItems.Add(new SelectListItem("Left","L"));
                            }
                            @Html.DropDownListFor(model=>model.CustomerStatus,listItems,new {@id = "cs", @class = "form-control input-sm", @style = "height: 27px;padding-top: 0px;padding-bottom: 0px;font-size: 15px;padding-left: 5px;"})
                        </div>
                    </div>
                    <div Class="col-md-6">
                        <div Class="form-group">
                            <Label Class="text-info"> Customer Type</Label>
                            @Html.List_Search("CustomerType", "43", "- Select Customer Type -", Model.CustomerType, "", new {@class = "form-control input-sm", @style = "height: 27px;padding-top: 0px;padding-bottom: 0px;font-size: 15px;padding-left: 5px;"})
                        </div>
                    </div>
                </div>
                <div class="col-md-12">
                    <div Class="col-md-6">
                        <div Class="form-group">
                            <Label for="title" class="text-info">Industry</Label>
                            @Html.TextBoxFor(model=> model.Industry, new {@class = "form-control input-sm", @style = "height: 27px;padding-top: 0px;padding-bottom: 0px;font-size: 15px;padding-left: 5px;"})
                        </div>
                    </div>
                    <div Class="col-md-6">
                        <div Class="form-group">
                            <Label Class="text-info">GSTIN</Label>
                            @Html.TextBoxFor(model=> model.GSTIN, new {@type = "text", @class = "form-control input-sm", @style = "height: 27px;padding-top: 0px;padding-bottom: 0px;font-size: 15px;padding-left: 5px;"})
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <div Class="form-group text-center" style="margin-top:40px">
            <input type="button" value="Submit" class="btn btn-primary btn-Submit" onclick="ConfirmSubmit(this.value)">
            @*<input type="Reset" value="Cancel" style="margin-left:  20px;" class="btn btn-default" onclick="location.href='@Url.Action("ManageCustomers")'">*@
            <input type="Reset" value="Cancel" style="margin-left:  20px;" class="btn btn-default" onclick="window.location.href = '/CRM/Home';">

        </div>

    </form>
</div>



